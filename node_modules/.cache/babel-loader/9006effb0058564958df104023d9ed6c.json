{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/HomePageTest.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport CurrencySelect from '../components/CurrencySelect';\nimport ErrorWall from '../components/Errors';\nimport './HomePage.css';\nexport default function HomePageTest() {\n  const [elements, setElements] = useState([]);\n  const [currHistory, setCurrHistory] = useState([]);\n  const [amount, setAmount] = useState(\"\"); // const [result, setResult] = useState(\"\");\n\n  const [error, setError] = useState(null);\n  const [date] = useState(new Date().toLocaleString().split(',')[0]);\n  const [currFrom, setCurrFrom] = useState(\"USD\");\n  const [currTo, setCurrTo] = useState(\"PLN\");\n  const currencyAPI = 'https://api.exchangeratesapi.io/latest';\n  let history = useHistory();\n\n  const testFun = () => {\n    console.log('funkcja przesÅ‚a');\n  }; //get currency value\n\n\n  const getCurrValue = useCallback(() => {\n    currencyHistory();\n    fetch(currencyAPI).then(res => res.json()).then(data => {\n      const allCurrency = [data.base, ...Object.keys(data.rates)];\n      setElements(allCurrency);\n    }).catch(err => setError(true));\n  }, []);\n  useEffect(() => {\n    getCurrValue();\n  }, [getCurrValue]);\n  useEffect(() => {\n    console.log(elements);\n    console.log(error);\n  }, [elements, error]); //set currency value\n\n  const convertCurrency = () => {\n    fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo).then(res => res.json()).then(data => {\n      const amountScore = amount * data.rates[currTo];\n      const storageHistory = JSON.parse(localStorage.getItem('history')) || [];\n      const amountResult = amountScore.toFixed(2);\n      setCurrHistory(storageHistory);\n      currHistory.push({\n        amount,\n        currFrom,\n        amountResult,\n        currTo,\n        date\n      });\n      setCurrHistory(localStorage.setItem('history', JSON.stringify(currHistory)));\n      currencyHistory();\n      history.push({\n        pathname: '/konwersje',\n        state: {\n          currHistory\n        }\n      });\n    });\n  };\n\n  const handleSelectCurrency = e => {\n    if (e.target.name === 'currencyFrom') {\n      setCurrFrom(e.target.value);\n    }\n\n    if (e.target.name === 'currencyTo') {\n      setCurrTo(e.target.value);\n    }\n  };\n\n  const handleInputCurrency = e => {\n    setAmount(e.target.value);\n    console.log(amount);\n  };\n\n  const currencyHistory = () => {\n    const getHistory = JSON.parse(localStorage.getItem('history'));\n    setCurrHistory(getHistory);\n  }; //validation\n\n\n  const requiredInput = value => value ? undefined : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 22\n    }\n  }, \"Wprowad\\u017A kwot\\u0119\");\n\n  const numberInput = value => value && isNaN(Number(value)) ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, \"Warto\\u015B\\u0107 musi by\\u0107 liczb\\u0105\") : undefined;\n\n  const allValidators = (...validators) => value => validators.reduce((error, validator) => error || validator(value), undefined);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: '/konwersje',\n      state: {\n        currHistory\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Historia Konwersji\"))), error !== null ? /*#__PURE__*/React.createElement(ErrorWall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: testFun // onSubmit={convertCurrency}\n    // initialValues={setAmount()}\n    // initialValues={{amount: 1}}\n    ,\n    initialValues: {\n      amount: amount\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"currencyAmount\",\n    validate: allValidators(requiredInput, numberInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, ({\n    input,\n    meta\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 73\n    }\n  }, \"Kwota\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n    type: \"text\",\n    placeholder: \"Wprowad\\u017A kwot\\u0119\",\n    value: amount,\n    onChange: e => handleInputCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 45\n    }\n  })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 76\n    }\n  }, meta.error))), /*#__PURE__*/React.createElement(\"label\", {\n    name: \"selectFrom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, \"Konwertuj z\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"selectFrom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, ({\n    select\n  }) => /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyFrom',\n    currencyElements: elements,\n    currencySelected: currFrom,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    name: \"selectTo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, \"Konwertuj na\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"selectTo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, ({\n    select\n  }) => /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyTo',\n    currencyElements: elements,\n    currencySelected: currTo,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-submit\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, \"Konwertuj\")))));\n}","map":{"version":3,"sources":["/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/HomePageTest.js"],"names":["React","useState","useEffect","useCallback","Link","useHistory","Form","Field","CurrencySelect","ErrorWall","HomePageTest","elements","setElements","currHistory","setCurrHistory","amount","setAmount","error","setError","date","Date","toLocaleString","split","currFrom","setCurrFrom","currTo","setCurrTo","currencyAPI","history","testFun","console","log","getCurrValue","currencyHistory","fetch","then","res","json","data","allCurrency","base","Object","keys","rates","catch","err","convertCurrency","amountScore","storageHistory","JSON","parse","localStorage","getItem","amountResult","toFixed","push","setItem","stringify","pathname","state","handleSelectCurrency","e","target","name","value","handleInputCurrency","getHistory","requiredInput","undefined","numberInput","isNaN","Number","allValidators","validators","reduce","validator","handleSubmit","input","meta","touched","select"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport CurrencySelect from '../components/CurrencySelect';\nimport ErrorWall from '../components/Errors';\nimport './HomePage.css';\n\n\n\n\n\nexport default function HomePageTest() {\n\n    const [elements, setElements] = useState([]);\n    const [currHistory, setCurrHistory] = useState([]);\n    const [amount, setAmount] = useState(\"\");\n    // const [result, setResult] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [date] = useState(new Date().toLocaleString().split(',')[0]);\n    const [currFrom, setCurrFrom] = useState(\"USD\");\n    const [currTo, setCurrTo] = useState(\"PLN\");\n    const currencyAPI = 'https://api.exchangeratesapi.io/latest';\n    let history = useHistory();\n\n\n    const testFun = () => {\n        console.log('funkcja przesÅ‚a')\n    }\n\n    //get currency value\n    const getCurrValue = useCallback(() => {\n        currencyHistory();\n        fetch(currencyAPI)\n            .then(res => res.json())\n            .then(data => {\n                const allCurrency = ([data.base, ...Object.keys(data.rates)])\n                setElements(allCurrency);\n            })\n            .catch(err => setError(true))\n    }, [])\n\n    useEffect(() => {\n        getCurrValue();\n    }, [getCurrValue]);\n\n    useEffect(() => {\n        console.log(elements)\n        console.log(error)\n    }, [elements, error]);\n\n\n    //set currency value\n    const convertCurrency = () => {\n        fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo)\n            .then(res => res.json())\n            .then(data => {\n                const amountScore = amount * (data.rates[currTo])\n                const storageHistory = JSON.parse(localStorage.getItem('history')) || [];\n                const amountResult = amountScore.toFixed(2);\n                setCurrHistory(storageHistory);\n                currHistory.push({\n                    amount,\n                    currFrom,\n                    amountResult,\n                    currTo,\n                    date\n                });\n\n                setCurrHistory(localStorage.setItem('history', JSON.stringify(currHistory)))\n\n                currencyHistory();\n\n                history.push({\n                    pathname: '/konwersje',\n                    state: {\n                        currHistory,\n                    }\n                })\n            })\n    }\n\n    const handleSelectCurrency = e => {\n        if (e.target.name === 'currencyFrom') {\n            setCurrFrom(e.target.value)\n        }\n        if (e.target.name === 'currencyTo') {\n            setCurrTo(e.target.value)\n        }\n    }\n\n    const handleInputCurrency = e => { setAmount(e.target.value); console.log(amount) }\n\n    const currencyHistory = () => {\n        const getHistory = JSON.parse(localStorage.getItem('history'));\n        setCurrHistory(getHistory)\n    }\n\n\n    //validation\nconst requiredInput = value =>\n(value ? undefined : <span className=\"error-form\">WprowadÅº kwotÄ™</span>);\n\nconst numberInput = value =>\nvalue && isNaN(Number(value)) ?\n    <span className=\"error-form\">WartoÅ›Ä‡ musi byÄ‡ liczbÄ…</span> : undefined;\n\nconst allValidators = (...validators) => value =>\nvalidators.reduce((error, validator) => error || validator(value), undefined);\n\n    return (\n        <div className=\"home-container\">\n            <div className=\"home-element\">\n                <Link to={{ pathname: '/konwersje', state: { currHistory } }}>\n                    <button className=\"btn-option\">Historia Konwersji</button></Link>\n            </div>\n\n            {error !== null ? (<ErrorWall />) :\n\n                <div className=\"home-element\">\n                    <Form\n                        onSubmit={testFun}\n                        // onSubmit={convertCurrency}\n                        // initialValues={setAmount()}\n                        // initialValues={{amount: 1}}\n                        initialValues={{amount: amount}}\n                    >\n                        {({ handleSubmit }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Field\n                                    name=\"currencyAmount\"\n                                    validate={allValidators(requiredInput, numberInput)}>\n                                    {({ input, meta }) => (\n                                        <div>\n                                            <div className=\"home-label\"><label>Kwota</label></div>\n                                            <input {...input} type=\"text\" placeholder=\"WprowadÅº kwotÄ™\"\n                                                value={amount}\n                                                onChange={e => handleInputCurrency(e)} />\n                                            {meta.error && meta.touched && <div className=\"form-error\">{meta.error}</div>}\n                                        </div>\n                                    )}\n                                </Field>\n\n                                <label name=\"selectFrom\">Konwertuj z</label>\n                                <Field name=\"selectFrom\" >\n                                    {({ select }) => (\n                                        <CurrencySelect\n                                            currencyName={'currencyFrom'}\n                                            currencyElements={elements}\n                                            currencySelected={currFrom}\n                                            currencyOnChange={e => handleSelectCurrency(e)}\n                                        />\n                                    )}\n                                </Field>\n                                \n                                <label name=\"selectTo\">Konwertuj na</label>\n                                <Field name=\"selectTo\" >\n                                    {({ select }) => (\n                                        <CurrencySelect\n                                            currencyName={'currencyTo'}\n                                            currencyElements={elements}\n                                            currencySelected={currTo}\n                                            currencyOnChange={e => handleSelectCurrency(e)}\n                                        />\n                                    )}\n                                </Field>\n\n                                <button className=\"btn-submit\" type=\"submit\" onClick={handleSubmit}>Konwertuj</button>\n\n                            </form>\n                        )}\n                    </Form>\n                </div>\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}