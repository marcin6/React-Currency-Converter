{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/HomePageTest.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport CurrencySelect from '../components/CurrencySelect';\nimport ErrorWall from '../components/Errors';\nimport './HomePage.css';\nexport default function HomePageTest() {\n  const [elements, setElements] = useState([]);\n  const [currHistory, setCurrHistory] = useState([]);\n  const [amount, setAmount] = useState(\"\");\n  const [result, setResult] = useState();\n  const [error, setError] = useState(null);\n  const [date] = useState(new Date().toLocaleString().split(',')[0]);\n  const [currFrom, setCurrFrom] = useState(\"USD\");\n  const [currTo, setCurrTo] = useState(\"PLN\");\n  const currencyAPI = 'https://api.exchangeratesapi.io/latest';\n  let history = useHistory(); //get currency value\n\n  const getCurrValue = () => {\n    // currencyHistory();\n    fetch(currencyAPI).then(res => res.json()).then(data => {\n      const allCurrency = [data.base, ...Object.keys(data.rates)];\n      setElements(allCurrency);\n    }).catch(err => setError(true));\n  };\n\n  useEffect(() => {\n    getCurrValue();\n    currencyHistory();\n  }, []);\n  useEffect(() => {\n    console.log(elements);\n    console.log(error);\n  }, [elements, error]); // useEffect(() => {\n  //     // currencyHistory();\n  //     fetch(currencyAPI)\n  //         .then(res => res.json())\n  //         .then(data => {\n  //             const allCurrency = ([data.base, ...Object.keys(data.rates)])\n  //             setElements(allCurrency);\n  //             // console.log(allCurrency);\n  //             console.log(elements);\n  //         }\n  //         // ,\n  //         //     (error) => {\n  //         //         setError(error)\n  //         //     }\n  //         )\n  // }, [elements])\n  //set currency value\n\n  const convertCurrency = props => {\n    fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo).then(res => res.json()).then(data => {\n      const amountScore = amount * data.rates[currTo];\n      const storageHistory = JSON.parse(localStorage.getItem('history')) || [];\n      setResult(amountScore.toFixed(2));\n      setCurrHistory(storageHistory);\n      const amountResult = result; // history.push({ amount, currFrom, amountResult, currTo, date });\n\n      let setHistory = currHistory; // console.log(currHistory);\n      // console.log(setHistory);\n\n      currHistory.push({\n        // setHistory.push({\n        amount,\n        currFrom,\n        amountResult,\n        currTo,\n        date\n      });\n      console.log(currHistory); // setCurrHistory({ amount, currFrom, amountResult, currTo, date });\n      // setCurrHistory({ ...currHistory, amount, currFrom, amountResult, currTo, date });\n      // currHistory.push({\n      //     amount, currFrom, amountResult, currTo, date\n      // })\n\n      setCurrHistory( // setCurrHistory(setHistory), () => {\n      localStorage.setItem('history', JSON.stringify(setHistory)) // }\n      ); // history function\n      // history link\n      // currencyHistory();\n\n      history.push({\n        pathname: '/konwersje',\n        state: {\n          currHistory\n        }\n      });\n    });\n  }; //history\n\n\n  const currencyHistory = () => {\n    const getHistory = JSON.parse(localStorage.getItem('history'));\n    setCurrHistory(getHistory);\n    console.log('submit');\n  }; //handle functions\n\n\n  const handleSelectCurrency = e => {\n    if (e.target.name === 'currencyFrom') {\n      setCurrFrom(e.target.value);\n    }\n\n    if (e.target.name === 'currencyTo') {\n      setCurrTo(e.target.value);\n    }\n  };\n\n  const handleInputCurrency = e => {\n    setAmount(e.target.value);\n    console.log(amount);\n  }; //validation\n  // const requiredInput = value =>\n  //     (value ? undefined : <span className=\"error-form\">Wprowadź kwotę</span>);\n  // const numberInput = value =>\n  //     value && isNaN(Number(value)) ?\n  //         <span className=\"error-form\">Wartość musi być liczbą</span> : undefined;\n  // const allValidators = (...validators) => value =>\n  //     validators.reduce((error, validator) => error || validator(value), undefined);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: '/konwersje',\n      state: {\n        currHistory\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"Historia Konwersji\"))), error !== null ? /*#__PURE__*/React.createElement(ErrorWall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: convertCurrency // initialValues={setAmount(amount)}\n    ,\n    initialValues: amount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"currencyAmount\" // validate={allValidators(requiredInput, numberInput)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, ({\n    input,\n    meta\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 69\n    }\n  }, \"Kwota\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n    type: \"text\",\n    placeholder: \"Wprowad\\u017A kwot\\u0119\",\n    value: amount,\n    onChange: e => handleInputCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 41\n    }\n  })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 72\n    }\n  }, meta.error))), /*#__PURE__*/React.createElement(\"label\", {\n    name: \"selectFrom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  }, \"Konwertuj z\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"selectFrom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, ({\n    select\n  }) => /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyFrom',\n    currencyElements: elements,\n    currencySelected: currFrom,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    name: \"selectTo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, \"Konwertuj na\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"selectTo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }, ({\n    select\n  }) => /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyTo',\n    currencyElements: elements,\n    currencySelected: currTo,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-submit\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  }, \"Konwertuj\")))));\n}","map":{"version":3,"sources":["/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/HomePageTest.js"],"names":["React","useState","useEffect","Link","useHistory","Form","Field","CurrencySelect","ErrorWall","HomePageTest","elements","setElements","currHistory","setCurrHistory","amount","setAmount","result","setResult","error","setError","date","Date","toLocaleString","split","currFrom","setCurrFrom","currTo","setCurrTo","currencyAPI","history","getCurrValue","fetch","then","res","json","data","allCurrency","base","Object","keys","rates","catch","err","currencyHistory","console","log","convertCurrency","props","amountScore","storageHistory","JSON","parse","localStorage","getItem","toFixed","amountResult","setHistory","push","setItem","stringify","pathname","state","getHistory","handleSelectCurrency","e","target","name","value","handleInputCurrency","handleSubmit","input","meta","touched","select"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAO,gBAAP;AAEA,eAAe,SAASC,YAAT,GAAwB;AAEnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,EAApC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACmB,IAAD,IAASnB,QAAQ,CAAC,IAAIoB,IAAJ,GAAWC,cAAX,GAA4BC,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAAD,CAAvB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM2B,WAAW,GAAG,wCAApB;AAEA,MAAIC,OAAO,GAAGzB,UAAU,EAAxB,CAbmC,CAgBnC;;AAEA,QAAM0B,YAAY,GAAG,MAAM;AACvB;AACAC,IAAAA,KAAK,CAACH,WAAD,CAAL,CACKI,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,YAAMC,WAAW,GAAI,CAACD,IAAI,CAACE,IAAN,EAAY,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACK,KAAjB,CAAf,CAArB;AACA7B,MAAAA,WAAW,CAACyB,WAAD,CAAX;AACH,KALL,EAMKK,KANL,CAMWC,GAAG,IAAIvB,QAAQ,CAAC,IAAD,CAN1B;AAOH,GATD;;AAWAjB,EAAAA,SAAS,CAAC,MAAM;AACZ4B,IAAAA,YAAY;AACZa,IAAAA,eAAe;AAClB,GAHQ,EAGN,EAHM,CAAT;AAKAzC,EAAAA,SAAS,CAAC,MAAM;AACZ0C,IAAAA,OAAO,CAACC,GAAR,CAAYnC,QAAZ;AACAkC,IAAAA,OAAO,CAACC,GAAR,CAAY3B,KAAZ;AACH,GAHQ,EAGN,CAACR,QAAD,EAAWQ,KAAX,CAHM,CAAT,CAlCmC,CAwCnC;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;;AACA,QAAM4B,eAAe,GAAIC,KAAD,IAAW;AAC/BhB,IAAAA,KAAK,CAACH,WAAW,GAAG,QAAd,GAAyBJ,QAAzB,GAAoC,WAApC,GAAkDE,MAAnD,CAAL,CACKM,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,YAAMa,WAAW,GAAGlC,MAAM,GAAIqB,IAAI,CAACK,KAAL,CAAWd,MAAX,CAA9B;AACA,YAAMuB,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,KAA+C,EAAtE;AAEApC,MAAAA,SAAS,CAAC+B,WAAW,CAACM,OAAZ,CAAoB,CAApB,CAAD,CAAT;AACAzC,MAAAA,cAAc,CAACoC,cAAD,CAAd;AAEA,YAAMM,YAAY,GAAGvC,MAArB,CAPU,CAUV;;AAEA,UAAIwC,UAAU,GAAG5C,WAAjB,CAZU,CAcV;AACA;;AAEAA,MAAAA,WAAW,CAAC6C,IAAZ,CAAiB;AACjB;AACI3C,QAAAA,MAFa;AAGbU,QAAAA,QAHa;AAIb+B,QAAAA,YAJa;AAKb7B,QAAAA,MALa;AAMbN,QAAAA;AANa,OAAjB;AASAwB,MAAAA,OAAO,CAACC,GAAR,CAAYjC,WAAZ,EA1BU,CA4BV;AAEA;AAEA;AACA;AACA;;AAEAC,MAAAA,cAAc,EACV;AACKuC,MAAAA,YAAY,CAACM,OAAb,CAAqB,SAArB,EAAgCR,IAAI,CAACS,SAAL,CAAeH,UAAf,CAAhC,CAFK,CAIN;AAJM,OAAd,CApCU,CA2CV;AAEA;AAEA;;AAEA3B,MAAAA,OAAO,CAAC4B,IAAR,CAAa;AACTG,QAAAA,QAAQ,EAAE,YADD;AAETC,QAAAA,KAAK,EAAE;AACHjD,UAAAA;AADG;AAFE,OAAb;AAMH,KAzDL;AA0DH,GA3DD,CApEmC,CAiI/B;;;AACA,QAAM+B,eAAe,GAAG,MAAM;AAC1B,UAAMmB,UAAU,GAAGZ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAnB;AAEAxC,IAAAA,cAAc,CAACiD,UAAD,CAAd;AAEAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEH,GAPD,CAlI+B,CA4InC;;;AACA,QAAMkB,oBAAoB,GAAGC,CAAC,IAAI;AAC9B,QAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,cAAtB,EAAsC;AAClCzC,MAAAA,WAAW,CAACuC,CAAC,CAACC,MAAF,CAASE,KAAV,CAAX;AACH;;AACD,QAAIH,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;AAChCvC,MAAAA,SAAS,CAACqC,CAAC,CAACC,MAAF,CAASE,KAAV,CAAT;AACH;AACJ,GAPD;;AAUA,QAAMC,mBAAmB,GAAGJ,CAAC,IAAI;AAACjD,IAAAA,SAAS,CAACiD,CAAC,CAACC,MAAF,CAASE,KAAV,CAAT;AAA2BvB,IAAAA,OAAO,CAACC,GAAR,CAAY/B,MAAZ;AAAqB,GAAlF,CAvJmC,CA6JnC;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAC8C,MAAAA,QAAQ,EAAE,YAAX;AAAyBC,MAAAA,KAAK,EAAE;AAAEjD,QAAAA;AAAF;AAAhC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,CADJ,CADJ,EAMKM,KAAK,KAAK,IAAV,gBAAkB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,gBAED;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,QAAQ,EAAE4B,eADd,CAEI;AAFJ;AAGI,IAAA,aAAa,EAAEhC,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKK,CAAC;AAAEuD,IAAAA;AAAF,GAAD,kBACG;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,gBADT,CAEI;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIK,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA5B,CADJ,eAEI,+CAAWD,KAAX;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,WAAW,EAAC,0BAA1C;AAA2D,IAAA,KAAK,EAAExD,MAAlE;AACI,IAAA,QAAQ,EAAEkD,CAAC,IAAII,mBAAmB,CAACJ,CAAD,CADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAIKO,IAAI,CAACrD,KAAL,IAAcqD,IAAI,CAACC,OAAnB,iBAA8B;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,IAAI,CAACrD,KAAlC,CAJnC,CALR,CADJ,eAeI;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfJ,eAgBI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACS,CAAC;AAAEuD,IAAAA;AAAF,GAAD,kBACG,oBAAC,cAAD;AACI,IAAA,YAAY,EAAE,cADlB;AAEI,IAAA,gBAAgB,EAAE/D,QAFtB;AAGI,IAAA,gBAAgB,EAAEc,QAHtB;AAII,IAAA,gBAAgB,EAAEwC,CAAC,IAAID,oBAAoB,CAACC,CAAD,CAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFZ,CAhBJ,eA0BI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1BJ,eA4BI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACS,CAAC;AAAES,IAAAA;AAAF,GAAD,kBACG,oBAAC,cAAD;AACI,IAAA,YAAY,EAAE,YADlB;AAEI,IAAA,gBAAgB,EAAE/D,QAFtB;AAGI,IAAA,gBAAgB,EAAEgB,MAHtB;AAII,IAAA,gBAAgB,EAAEsC,CAAC,IAAID,oBAAoB,CAACC,CAAD,CAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFZ,CA5BJ,eAuCI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,IAAI,EAAC,QAApC;AAA6C,IAAA,OAAO,EAAEK,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAvCJ,CANR,CADJ,CARJ,CADJ;AAgEH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport CurrencySelect from '../components/CurrencySelect';\nimport ErrorWall from '../components/Errors';\nimport './HomePage.css';\n\nexport default function HomePageTest() {\n\n    const [elements, setElements] = useState([]);\n    const [currHistory, setCurrHistory] = useState([]);\n    const [amount, setAmount] = useState(\"\");\n    const [result, setResult] = useState();\n    const [error, setError] = useState(null);\n    const [date] = useState(new Date().toLocaleString().split(',')[0]);\n    const [currFrom, setCurrFrom] = useState(\"USD\");\n    const [currTo, setCurrTo] = useState(\"PLN\");\n\n    const currencyAPI = 'https://api.exchangeratesapi.io/latest';\n\n    let history = useHistory();\n\n\n    //get currency value\n\n    const getCurrValue = () => {\n        // currencyHistory();\n        fetch(currencyAPI)\n            .then(res => res.json())\n            .then(data => {\n                const allCurrency = ([data.base, ...Object.keys(data.rates)])\n                setElements(allCurrency);\n            })\n            .catch(err => setError(true))\n    }\n\n    useEffect(() => {\n        getCurrValue();\n        currencyHistory();\n    }, []);\n    \n    useEffect(() => {\n        console.log(elements)\n        console.log(error)\n    }, [elements, error]);\n\n\n    // useEffect(() => {\n    //     // currencyHistory();\n    //     fetch(currencyAPI)\n    //         .then(res => res.json())\n    //         .then(data => {\n\n    //             const allCurrency = ([data.base, ...Object.keys(data.rates)])\n    //             setElements(allCurrency);\n\n\n    //             // console.log(allCurrency);\n    //             console.log(elements);\n    //         }\n    //         // ,\n    //         //     (error) => {\n    //         //         setError(error)\n    //         //     }\n\n    //         )\n    // }, [elements])\n\n\n\n   \n\n\n\n    //set currency value\n    const convertCurrency = (props) => {\n        fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo)\n            .then(res => res.json())\n            .then(data => {\n                const amountScore = amount * (data.rates[currTo])\n                const storageHistory = JSON.parse(localStorage.getItem('history')) || [];\n\n                setResult(amountScore.toFixed(2));\n                setCurrHistory(storageHistory);\n\n                const amountResult = result;\n\n\n                // history.push({ amount, currFrom, amountResult, currTo, date });\n\n                let setHistory = currHistory\n                \n                // console.log(currHistory);\n                // console.log(setHistory);\n\n                currHistory.push({\n                // setHistory.push({\n                    amount,\n                    currFrom,\n                    amountResult,\n                    currTo,\n                    date\n                });\n\n                console.log(currHistory);\n\n                // setCurrHistory({ amount, currFrom, amountResult, currTo, date });\n\n                // setCurrHistory({ ...currHistory, amount, currFrom, amountResult, currTo, date });\n\n                // currHistory.push({\n                //     amount, currFrom, amountResult, currTo, date\n                // })\n\n                setCurrHistory(\n                    // setCurrHistory(setHistory), () => {\n                         localStorage.setItem('history', JSON.stringify(setHistory))\n                        \n                        // }\n                        )\n\n                // history function\n\n                // history link\n\n                // currencyHistory();\n                \n                history.push({\n                    pathname: '/konwersje',\n                    state: {\n                        currHistory,\n                    }\n                })\n            })\n    }\n\n        //history\n        const currencyHistory = () => {\n            const getHistory = JSON.parse(localStorage.getItem('history'));\n    \n            setCurrHistory(getHistory)\n    \n            console.log('submit');\n    \n        }\n\n\n    //handle functions\n    const handleSelectCurrency = e => {\n        if (e.target.name === 'currencyFrom') {\n            setCurrFrom(e.target.value)\n        }\n        if (e.target.name === 'currencyTo') {\n            setCurrTo(e.target.value)\n        }\n    }\n\n\n    const handleInputCurrency = e => {setAmount(e.target.value); console.log(amount) }\n\n\n\n\n\n    //validation\n    // const requiredInput = value =>\n    //     (value ? undefined : <span className=\"error-form\">Wprowadź kwotę</span>);\n\n    // const numberInput = value =>\n    //     value && isNaN(Number(value)) ?\n    //         <span className=\"error-form\">Wartość musi być liczbą</span> : undefined;\n\n    // const allValidators = (...validators) => value =>\n    //     validators.reduce((error, validator) => error || validator(value), undefined);\n\n\n    return (\n        <div className=\"home-container\">\n            <div className=\"home-element\">\n                <Link to={{pathname: '/konwersje', state: { currHistory }}}>\n                <button className=\"btn-option\">Historia Konwersji</button></Link>\n            </div>\n\n            {error !== null ? (<ErrorWall />) :\n\n            <div className=\"home-element\">\n                <Form\n                    onSubmit={convertCurrency}\n                    // initialValues={setAmount(amount)}\n                    initialValues={amount}\n                >\n                    {({ handleSubmit }) => (\n                        <form onSubmit={handleSubmit}>\n                            <Field\n                                name=\"currencyAmount\"\n                                // validate={allValidators(requiredInput, numberInput)}\n                                >\n                                {({ input, meta }) => (\n                                    <div>\n                                        <div className=\"home-label\"><label>Kwota</label></div>\n                                        <input {...input} type=\"text\" placeholder=\"Wprowadź kwotę\" value={amount}\n                                            onChange={e => handleInputCurrency(e)} />\n                                        {meta.error && meta.touched && <div className=\"form-error\">{meta.error}</div>}\n                                    </div>\n                                )}\n                            </Field>\n\n                            <label name=\"selectFrom\">Konwertuj z</label>\n                            <Field name=\"selectFrom\" >\n                                    {({ select }) => (\n                                        <CurrencySelect\n                                            currencyName={'currencyFrom'}\n                                            currencyElements={elements}\n                                            currencySelected={currFrom}\n                                            currencyOnChange={e => handleSelectCurrency(e)}\n                                        />\n                                    )}\n                                </Field>\n                            <label name=\"selectTo\">Konwertuj na</label>\n\n                            <Field name=\"selectTo\" >\n                                    {({ select }) => (\n                                        <CurrencySelect\n                                            currencyName={'currencyTo'}\n                                            currencyElements={elements}\n                                            currencySelected={currTo}\n                                            currencyOnChange={e => handleSelectCurrency(e)}\n                                        />\n                                    )}\n                                </Field>\n\n                            <button className=\"btn-submit\" type=\"submit\" onClick={handleSubmit}>Konwertuj</button>\n\n                        </form>\n                    )}\n                </Form>\n            </div>\n}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}