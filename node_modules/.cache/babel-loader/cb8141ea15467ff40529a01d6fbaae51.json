{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/HomePageTest.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport CurrencySelect from '../components/CurrencySelect';\nimport ErrorWall from '../components/Errors';\nimport './HomePage.css'; //validation\n// const requiredInput = value => \n//     (value ? undefined : <span className=\"error-form\">Wprowadź kwotę</span>);\n// const numberInput = value => \n//     value && isNaN(Number(value)) ?\n//         <span className=\"error-form\">Wartość musi być liczbą</span> : undefined;\n// const allValidators = (...validators) => value =>\n//     validators.reduce((error, validator) => error || validator(value), undefined);\n\nconst required = value => value === null ? undefined : \"Required\";\n\nconst mustBeNumber = value => isNaN(value) ? \"Must be a number\" : undefined;\n\nconst composeValidators = (...validators) => value => validators.reduce((error, validator) => error || validator(value), undefined);\n\nexport default function HomePageTest() {\n  const [elements, setElements] = useState([]);\n  const [currHistory, setCurrHistory] = useState([]);\n  const [amount, setAmount] = useState(\"\"); // const [result, setResult] = useState(\"\");\n\n  const [error, setError] = useState(null);\n  const [date] = useState(new Date().toLocaleString().split(',')[0]);\n  const [currFrom, setCurrFrom] = useState(\"USD\");\n  const [currTo, setCurrTo] = useState(\"PLN\");\n  const currencyAPI = 'https://api.exchangeratesapi.io/latest';\n  let history = useHistory(); //get currency value\n\n  const getCurrValue = useCallback(() => {\n    currencyHistory();\n    fetch(currencyAPI).then(res => res.json()).then(data => {\n      const allCurrency = [data.base, ...Object.keys(data.rates)];\n      setElements(allCurrency);\n    }).catch(err => setError(true));\n  }, []);\n  useEffect(() => {\n    getCurrValue();\n  }, [getCurrValue]);\n  useEffect(() => {\n    console.log(elements);\n    console.log(error);\n  }, [elements, error]); // useEffect(() => {\n  //     // currencyHistory();\n  //     fetch(currencyAPI)\n  //         .then(res => res.json())\n  //         .then(data => {\n  //             const allCurrency = ([data.base, ...Object.keys(data.rates)])\n  //             setElements(allCurrency);\n  //             // console.log(allCurrency);\n  //             console.log(elements);\n  //         }\n  //         // ,\n  //         //     (error) => {\n  //         //         setError(error)\n  //         //     }\n  //         )\n  // }, [elements])\n  //set currency value\n\n  const convertCurrency = () => {\n    fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo).then(res => res.json()).then(data => {\n      const amountScore = amount * data.rates[currTo];\n      const storageHistory = JSON.parse(localStorage.getItem('history')) || [];\n      const amountResult = amountScore.toFixed(2);\n      setCurrHistory(storageHistory);\n      currHistory.push({\n        amount,\n        currFrom,\n        amountResult,\n        currTo,\n        date\n      });\n      setCurrHistory(localStorage.setItem('history', JSON.stringify(currHistory))); // history function\n      // history link\n\n      currencyHistory();\n      history.push({\n        pathname: '/konwersje',\n        state: {\n          currHistory\n        }\n      });\n    });\n  }; //handle functions\n\n\n  const handleSelectCurrency = e => {\n    if (e.target.name === 'currencyFrom') {\n      setCurrFrom(e.target.value);\n    }\n\n    if (e.target.name === 'currencyTo') {\n      setCurrTo(e.target.value);\n    }\n  };\n\n  const handleInputCurrency = e => {\n    setAmount(e.target.value);\n    console.log(amount);\n  }; //history\n\n\n  const currencyHistory = () => {\n    const getHistory = JSON.parse(localStorage.getItem('history'));\n    setCurrHistory(getHistory);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: '/konwersje',\n      state: {\n        currHistory\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"Historia Konwersji\"))), error !== null ? /*#__PURE__*/React.createElement(ErrorWall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: convertCurrency // initialValues={setAmount()}\n    ,\n    initialValues: amount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"currencyAmount\" // validate={allValidators(requiredInput, numberInput)}\n    ,\n    validate: composeValidators(required, mustBeNumber) // validate={requiredInput}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, ({\n    input,\n    meta\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 73\n    }\n  }, \"Kwota\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n    type: \"text\",\n    placeholder: \"Wprowad\\u017A kwot\\u0119\",\n    value: amount,\n    onChange: e => handleInputCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 45\n    }\n  })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 76\n    }\n  }, meta.error))), /*#__PURE__*/React.createElement(\"label\", {\n    name: \"selectFrom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, \"Konwertuj z\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"selectFrom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }, ({\n    select\n  }) => /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyFrom',\n    currencyElements: elements,\n    currencySelected: currFrom,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    name: \"selectTo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, \"Konwertuj na\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"selectTo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }, ({\n    select\n  }) => /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyTo',\n    currencyElements: elements,\n    currencySelected: currTo,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-submit\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, \"Konwertuj\")))));\n}","map":{"version":3,"sources":["/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/HomePageTest.js"],"names":["React","useState","useEffect","useCallback","Link","useHistory","Form","Field","CurrencySelect","ErrorWall","required","value","undefined","mustBeNumber","isNaN","composeValidators","validators","reduce","error","validator","HomePageTest","elements","setElements","currHistory","setCurrHistory","amount","setAmount","setError","date","Date","toLocaleString","split","currFrom","setCurrFrom","currTo","setCurrTo","currencyAPI","history","getCurrValue","currencyHistory","fetch","then","res","json","data","allCurrency","base","Object","keys","rates","catch","err","console","log","convertCurrency","amountScore","storageHistory","JSON","parse","localStorage","getItem","amountResult","toFixed","push","setItem","stringify","pathname","state","handleSelectCurrency","e","target","name","handleInputCurrency","getHistory","handleSubmit","input","meta","touched","select"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAO,gBAAP,C,CAGI;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAKA,KAAK,KAAK,IAAV,GAAiBC,SAAjB,GAA6B,UAAxD;;AACJ,MAAMC,YAAY,GAAGF,KAAK,IAAKG,KAAK,CAACH,KAAD,CAAL,GAAe,kBAAf,GAAoCC,SAAnE;;AACA,MAAMG,iBAAiB,GAAG,CAAC,GAAGC,UAAJ,KAAmBL,KAAK,IAChDK,UAAU,CAACC,MAAX,CAAkB,CAACC,KAAD,EAAQC,SAAR,KAAsBD,KAAK,IAAIC,SAAS,CAACR,KAAD,CAA1D,EAAmEC,SAAnE,CADF;;AAIA,eAAe,SAASQ,YAAT,GAAwB;AAEnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,EAAD,CAApC,CAJmC,CAKnC;;AACA,QAAM,CAACiB,KAAD,EAAQS,QAAR,IAAoB1B,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC2B,IAAD,IAAS3B,QAAQ,CAAC,IAAI4B,IAAJ,GAAWC,cAAX,GAA4BC,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAAD,CAAvB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACiC,MAAD,EAASC,SAAT,IAAsBlC,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMmC,WAAW,GAAG,wCAApB;AAEA,MAAIC,OAAO,GAAGhC,UAAU,EAAxB,CAbmC,CAgBnC;;AAEA,QAAMiC,YAAY,GAAGnC,WAAW,CAAC,MAAM;AACnCoC,IAAAA,eAAe;AACfC,IAAAA,KAAK,CAACJ,WAAD,CAAL,CACKK,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,YAAMC,WAAW,GAAI,CAACD,IAAI,CAACE,IAAN,EAAY,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACK,KAAjB,CAAf,CAArB;AACA3B,MAAAA,WAAW,CAACuB,WAAD,CAAX;AACH,KALL,EAMKK,KANL,CAMWC,GAAG,IAAIxB,QAAQ,CAAC,IAAD,CAN1B;AAOH,GAT+B,EAS9B,EAT8B,CAAhC;AAWAzB,EAAAA,SAAS,CAAC,MAAM;AACZoC,IAAAA,YAAY;AACf,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIApC,EAAAA,SAAS,CAAC,MAAM;AACZkD,IAAAA,OAAO,CAACC,GAAR,CAAYhC,QAAZ;AACA+B,IAAAA,OAAO,CAACC,GAAR,CAAYnC,KAAZ;AACH,GAHQ,EAGN,CAACG,QAAD,EAAWH,KAAX,CAHM,CAAT,CAjCmC,CAuCnC;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;;AACA,QAAMoC,eAAe,GAAG,MAAM;AAC1Bd,IAAAA,KAAK,CAACJ,WAAW,GAAG,QAAd,GAAyBJ,QAAzB,GAAoC,WAApC,GAAkDE,MAAnD,CAAL,CACKO,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,YAAMW,WAAW,GAAG9B,MAAM,GAAImB,IAAI,CAACK,KAAL,CAAWf,MAAX,CAA9B;AACA,YAAMsB,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,KAA+C,EAAtE;AACA,YAAMC,YAAY,GAAGN,WAAW,CAACO,OAAZ,CAAoB,CAApB,CAArB;AAEAtC,MAAAA,cAAc,CAACgC,cAAD,CAAd;AACAjC,MAAAA,WAAW,CAACwC,IAAZ,CAAiB;AACbtC,QAAAA,MADa;AAEbO,QAAAA,QAFa;AAGb6B,QAAAA,YAHa;AAIb3B,QAAAA,MAJa;AAKbN,QAAAA;AALa,OAAjB;AAQAJ,MAAAA,cAAc,CAACmC,YAAY,CAACK,OAAb,CAAqB,SAArB,EAAgCP,IAAI,CAACQ,SAAL,CAAe1C,WAAf,CAAhC,CAAD,CAAd,CAdU,CAgBV;AAEA;;AAEAgB,MAAAA,eAAe;AAEfF,MAAAA,OAAO,CAAC0B,IAAR,CAAa;AACTG,QAAAA,QAAQ,EAAE,YADD;AAETC,QAAAA,KAAK,EAAE;AACH5C,UAAAA;AADG;AAFE,OAAb;AAMH,KA9BL;AA+BH,GAhCD,CA/DmC,CAoGnC;;;AACA,QAAM6C,oBAAoB,GAAGC,CAAC,IAAI;AAC9B,QAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,cAAtB,EAAsC;AAClCtC,MAAAA,WAAW,CAACoC,CAAC,CAACC,MAAF,CAAS3D,KAAV,CAAX;AACH;;AACD,QAAI0D,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;AAChCpC,MAAAA,SAAS,CAACkC,CAAC,CAACC,MAAF,CAAS3D,KAAV,CAAT;AACH;AACJ,GAPD;;AAUA,QAAM6D,mBAAmB,GAAGH,CAAC,IAAI;AAAE3C,IAAAA,SAAS,CAAC2C,CAAC,CAACC,MAAF,CAAS3D,KAAV,CAAT;AAA2ByC,IAAAA,OAAO,CAACC,GAAR,CAAY5B,MAAZ;AAAqB,GAAnF,CA/GmC,CAkHrC;;;AACA,QAAMc,eAAe,GAAG,MAAM;AAC5B,UAAMkC,UAAU,GAAGhB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAnB;AACApC,IAAAA,cAAc,CAACiD,UAAD,CAAd;AACH,GAHC;;AASE,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEP,MAAAA,QAAQ,EAAE,YAAZ;AAA0BC,MAAAA,KAAK,EAAE;AAAE5C,QAAAA;AAAF;AAAjC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ,CADJ,EAMKL,KAAK,KAAK,IAAV,gBAAkB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,gBAEG;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,QAAQ,EAAEoC,eADd,CAEI;AAFJ;AAGI,IAAA,aAAa,EAAE7B,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKK,CAAC;AAAEiD,IAAAA;AAAF,GAAD,kBACG;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,gBADT,CAEI;AAFJ;AAGI,IAAA,QAAQ,EAAE3D,iBAAiB,CAACL,QAAD,EAAWG,YAAX,CAH/B,CAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMK,CAAC;AAAE8D,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA5B,CADJ,eAEI,+CAAWD,KAAX;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,WAAW,EAAC,0BAA1C;AACA,IAAA,KAAK,EAAElD,MADP;AAEI,IAAA,QAAQ,EAAE4C,CAAC,IAAIG,mBAAmB,CAACH,CAAD,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAKKO,IAAI,CAAC1D,KAAL,IAAc0D,IAAI,CAACC,OAAnB,iBAA8B;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,IAAI,CAAC1D,KAAlC,CALnC,CAPR,CADJ,eAkBI;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAlBJ,eAmBI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAAE4D,IAAAA;AAAF,GAAD,kBACG,oBAAC,cAAD;AACI,IAAA,YAAY,EAAE,cADlB;AAEI,IAAA,gBAAgB,EAAEzD,QAFtB;AAGI,IAAA,gBAAgB,EAAEW,QAHtB;AAII,IAAA,gBAAgB,EAAEqC,CAAC,IAAID,oBAAoB,CAACC,CAAD,CAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CAnBJ,eA6BI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7BJ,eA+BI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAAES,IAAAA;AAAF,GAAD,kBACG,oBAAC,cAAD;AACI,IAAA,YAAY,EAAE,YADlB;AAEI,IAAA,gBAAgB,EAAEzD,QAFtB;AAGI,IAAA,gBAAgB,EAAEa,MAHtB;AAII,IAAA,gBAAgB,EAAEmC,CAAC,IAAID,oBAAoB,CAACC,CAAD,CAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CA/BJ,eA0CI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,IAAI,EAAC,QAApC;AAA6C,IAAA,OAAO,EAAEK,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA1CJ,CANR,CADJ,CARR,CADJ;AAmEH","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport CurrencySelect from '../components/CurrencySelect';\nimport ErrorWall from '../components/Errors';\nimport './HomePage.css';\n\n\n    //validation\n    // const requiredInput = value => \n    //     (value ? undefined : <span className=\"error-form\">Wprowadź kwotę</span>);\n\n    // const numberInput = value => \n    //     value && isNaN(Number(value)) ?\n    //         <span className=\"error-form\">Wartość musi być liczbą</span> : undefined;\n\n    // const allValidators = (...validators) => value =>\n    //     validators.reduce((error, validator) => error || validator(value), undefined);\n\n    const required = value => (value === null ? undefined : \"Required\");\nconst mustBeNumber = value => (isNaN(value) ? \"Must be a number\" : undefined);\nconst composeValidators = (...validators) => value =>\n  validators.reduce((error, validator) => error || validator(value), undefined);\n\n\nexport default function HomePageTest() {\n\n    const [elements, setElements] = useState([]);\n    const [currHistory, setCurrHistory] = useState([]);\n    const [amount, setAmount] = useState(\"\");\n    // const [result, setResult] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [date] = useState(new Date().toLocaleString().split(',')[0]);\n    const [currFrom, setCurrFrom] = useState(\"USD\");\n    const [currTo, setCurrTo] = useState(\"PLN\");\n\n    const currencyAPI = 'https://api.exchangeratesapi.io/latest';\n\n    let history = useHistory();\n\n\n    //get currency value\n\n    const getCurrValue = useCallback(() => {\n        currencyHistory();\n        fetch(currencyAPI)\n            .then(res => res.json())\n            .then(data => {\n                const allCurrency = ([data.base, ...Object.keys(data.rates)])\n                setElements(allCurrency);\n            })\n            .catch(err => setError(true))\n    },[])\n\n    useEffect(() => {\n        getCurrValue();\n    }, [getCurrValue]);\n\n    useEffect(() => {\n        console.log(elements)\n        console.log(error)\n    }, [elements, error]);\n\n\n    // useEffect(() => {\n    //     // currencyHistory();\n    //     fetch(currencyAPI)\n    //         .then(res => res.json())\n    //         .then(data => {\n\n    //             const allCurrency = ([data.base, ...Object.keys(data.rates)])\n    //             setElements(allCurrency);\n\n\n    //             // console.log(allCurrency);\n    //             console.log(elements);\n    //         }\n    //         // ,\n    //         //     (error) => {\n    //         //         setError(error)\n    //         //     }\n\n    //         )\n    // }, [elements])\n\n\n\n    //set currency value\n    const convertCurrency = () => {\n        fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo)\n            .then(res => res.json())\n            .then(data => {\n                const amountScore = amount * (data.rates[currTo])\n                const storageHistory = JSON.parse(localStorage.getItem('history')) || [];\n                const amountResult = amountScore.toFixed(2);\n\n                setCurrHistory(storageHistory);\n                currHistory.push({\n                    amount,\n                    currFrom,\n                    amountResult,\n                    currTo,\n                    date\n                });\n\n                setCurrHistory(localStorage.setItem('history', JSON.stringify(currHistory)))\n\n                // history function\n\n                // history link\n\n                currencyHistory();\n\n                history.push({\n                    pathname: '/konwersje',\n                    state: {\n                        currHistory,\n                    }\n                })\n            })\n    }\n\n  \n\n\n    //handle functions\n    const handleSelectCurrency = e => {\n        if (e.target.name === 'currencyFrom') {\n            setCurrFrom(e.target.value)\n        }\n        if (e.target.name === 'currencyTo') {\n            setCurrTo(e.target.value)\n        }\n    }\n\n\n    const handleInputCurrency = e => { setAmount(e.target.value); console.log(amount) }\n\n\n  //history\n  const currencyHistory = () => {\n    const getHistory = JSON.parse(localStorage.getItem('history'));\n    setCurrHistory(getHistory)\n}\n\n\n\n\n\n    return (\n        <div className=\"home-container\">\n            <div className=\"home-element\">\n                <Link to={{ pathname: '/konwersje', state: { currHistory } }}>\n                    <button className=\"btn-option\">Historia Konwersji</button></Link>\n            </div>\n\n            {error !== null ? (<ErrorWall />) :\n\n                <div className=\"home-element\">\n                    <Form\n                        onSubmit={convertCurrency}\n                        // initialValues={setAmount()}\n                        initialValues={amount}\n                    >\n                        {({ handleSubmit }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Field\n                                    name=\"currencyAmount\"\n                                    // validate={allValidators(requiredInput, numberInput)}\n                                    validate={composeValidators(required, mustBeNumber)}\n                                // validate={requiredInput}\n                                >\n                                    {({ input, meta }) => (\n                                        <div>\n                                            <div className=\"home-label\"><label>Kwota</label></div>\n                                            <input {...input} type=\"text\" placeholder=\"Wprowadź kwotę\" \n                                            value={amount}\n                                                onChange={e => handleInputCurrency(e)} />\n                                            {meta.error && meta.touched && <div className=\"form-error\">{meta.error}</div>}\n                                        </div>\n                                    )}\n                                </Field>\n\n                                <label name=\"selectFrom\">Konwertuj z</label>\n                                <Field name=\"selectFrom\" >\n                                    {({ select }) => (\n                                        <CurrencySelect\n                                            currencyName={'currencyFrom'}\n                                            currencyElements={elements}\n                                            currencySelected={currFrom}\n                                            currencyOnChange={e => handleSelectCurrency(e)}\n                                        />\n                                    )}\n                                </Field>\n                                <label name=\"selectTo\">Konwertuj na</label>\n\n                                <Field name=\"selectTo\" >\n                                    {({ select }) => (\n                                        <CurrencySelect\n                                            currencyName={'currencyTo'}\n                                            currencyElements={elements}\n                                            currencySelected={currTo}\n                                            currencyOnChange={e => handleSelectCurrency(e)}\n                                        />\n                                    )}\n                                </Field>\n\n                                <button className=\"btn-submit\" type=\"submit\" onClick={handleSubmit}>Konwertuj</button>\n\n                            </form>\n                        )}\n                    </Form>\n                </div>\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}