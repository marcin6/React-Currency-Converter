{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/HomePage.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport CurrencySelect from '../components/CurrencySelect';\nimport ErrorWall from '../components/Errors';\nimport './HomePage.css';\nconst currencyAPI = 'https://api.exchangeratesapi.io/latest';\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.convertCurrency = () => {\n      const amount = this.state.currencyAmount;\n      const date = this.state.currencyDate;\n      const currencyFrom = this.state.currencyFrom;\n      const currencyTo = this.state.currencyTo;\n      fetch(currencyAPI + '?base=' + currencyFrom + '&symbols=' + currencyTo).then(res => res.json()).then(data => {\n        const amountScore = this.state.currencyAmount * data.rates[currencyTo];\n        const storageHistory = JSON.parse(localStorage.getItem('setHistory')) || [];\n        this.setState({\n          currencyResult: amountScore.toFixed(2),\n          currencySetHistory: storageHistory\n        });\n        const amountResult = this.state.currencyResult; //history module\n\n        let setHistory = this.state.currencySetHistory;\n        setHistory.push({\n          amount,\n          currencyFrom,\n          amountResult,\n          currencyTo,\n          date\n        });\n        this.setState({\n          currencySetHistory: setHistory\n        }, () => {\n          localStorage.setItem('setHistory', JSON.stringify(this.state.currencySetHistory));\n        });\n        this.currencyHistory();\n        this.props.history.push({\n          pathname: '/konwersje',\n          state: {\n            currencySetHistory: this.state.currencySetHistory\n          }\n        });\n      });\n    };\n\n    this.handleSelectCurrency = e => {\n      if (e.target.name === 'currencyFrom') {\n        this.setState({\n          currencyFrom: e.target.value\n        });\n      }\n\n      if (e.target.name === 'currencyTo') {\n        this.setState({\n          currencyTo: e.target.value\n        });\n      }\n    };\n\n    this.handleInputCurrency = e => {\n      this.setState({\n        currencyAmount: e.target.value\n      });\n    };\n\n    this.currencyHistory = () => {\n      const getHistory = JSON.parse(localStorage.getItem('setHistory'));\n      this.setState({\n        currencySetHistory: getHistory\n      });\n    };\n\n    this.requiredInput = value => value ? undefined : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 30\n      }\n    }, \"Wprowad\\u017A kwot\\u0119\");\n\n    this.numberInput = value => value && isNaN(Number(value)) ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"Warto\\u015B\\u0107 musi by\\u0107 liczb\\u0105\") : undefined;\n\n    this.allValidators = (...validators) => value => validators.reduce((error, validator) => error || validator(value), undefined);\n\n    this.state = {\n      currencyElements: [],\n      currencySetHistory: [],\n      currencyAmount: \"\",\n      currencyResult: \"\",\n      currencyError: null,\n      currencyDate: new Date().toLocaleString().split(',')[0],\n      currencyFrom: \"USD\",\n      currencyTo: \"PLN\"\n    };\n  } //get currency value\n\n\n  componentDidMount() {\n    this.currencyHistory();\n    fetch(currencyAPI).then(res => res.json()).then(data => {\n      const allCurrency = [data.base, ...Object.keys(data.rates)];\n      this.setState({\n        currencyElements: allCurrency\n      });\n    }, currencyError => {\n      this.setState({\n        currencyError\n      });\n    });\n  } //set currency value\n\n\n  render() {\n    return console.log(this.state.currencyAmount), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home-element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: '/konwersje',\n        state: {\n          currencySetHistory: this.state.currencySetHistory\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, \"Historia Konwersji\"))), this.state.currencyError !== null ? /*#__PURE__*/React.createElement(ErrorWall, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 55\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home-element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.convertCurrency,\n      initialValues: {\n        currencyAmount: this.state.currencyAmount\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, ({\n      handleSubmit\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"currencyAmount\",\n      validate: this.allValidators(this.requiredInput, this.numberInput),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    }, ({\n      input,\n      meta\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 77\n      }\n    }, \"Kwota\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n      type: \"text\",\n      placeholder: \"Wprowad\\u017A kwot\\u0119\",\n      value: this.state.currencyAmount,\n      onChange: e => this.handleInputCurrency(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 49\n      }\n    })), meta.error && meta.touched && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 80\n      }\n    }, meta.error))), /*#__PURE__*/React.createElement(\"label\", {\n      name: \"selectFrom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, \"Konwertuj z\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"selectFrom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 37\n      }\n    }, ({\n      select\n    }) => /*#__PURE__*/React.createElement(CurrencySelect, {\n      currencyName: 'currencyFrom',\n      currencyElements: this.state.currencyElements,\n      currencySelected: this.state.currencyFrom,\n      currencyOnChange: e => this.handleSelectCurrency(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      name: \"selectTo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, \"Konwertuj na\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"selectTo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    }, ({\n      select\n    }) => /*#__PURE__*/React.createElement(CurrencySelect, {\n      currencyName: 'currencyTo',\n      currencyElements: this.state.currencyElements,\n      currencySelected: this.state.currencyTo,\n      currencyOnChange: e => this.handleSelectCurrency(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-submit\",\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    }, \"Konwertuj\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/HomePage.js"],"names":["React","Component","Link","Form","Field","CurrencySelect","ErrorWall","currencyAPI","Home","constructor","props","convertCurrency","amount","state","currencyAmount","date","currencyDate","currencyFrom","currencyTo","fetch","then","res","json","data","amountScore","rates","storageHistory","JSON","parse","localStorage","getItem","setState","currencyResult","toFixed","currencySetHistory","amountResult","setHistory","push","setItem","stringify","currencyHistory","history","pathname","handleSelectCurrency","e","target","name","value","handleInputCurrency","getHistory","requiredInput","undefined","numberInput","isNaN","Number","allValidators","validators","reduce","error","validator","currencyElements","currencyError","Date","toLocaleString","split","componentDidMount","allCurrency","base","Object","keys","render","console","log","handleSubmit","input","meta","touched","select"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAO,gBAAP;AAGA,MAAMC,WAAW,GAAG,wCAApB;AAGA,eAAe,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AACxCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoCnBC,eApCmB,GAoCD,MAAM;AACpB,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,cAA1B;AACA,YAAMC,IAAI,GAAG,KAAKF,KAAL,CAAWG,YAAxB;AACA,YAAMC,YAAY,GAAG,KAAKJ,KAAL,CAAWI,YAAhC;AACA,YAAMC,UAAU,GAAG,KAAKL,KAAL,CAAWK,UAA9B;AAEAC,MAAAA,KAAK,CAACZ,WAAW,GAAG,QAAd,GAAyBU,YAAzB,GAAwC,WAAxC,GAAsDC,UAAvD,CAAL,CACKE,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,cAAMC,WAAW,GAAG,KAAKX,KAAL,CAAWC,cAAX,GAA6BS,IAAI,CAACE,KAAL,CAAWP,UAAX,CAAjD;AACA,cAAMQ,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,KAAkD,EAAzE;AAEA,aAAKC,QAAL,CAAc;AACVC,UAAAA,cAAc,EAAER,WAAW,CAACS,OAAZ,CAAoB,CAApB,CADN;AAEVC,UAAAA,kBAAkB,EAAER;AAFV,SAAd;AAKA,cAAMS,YAAY,GAAG,KAAKtB,KAAL,CAAWmB,cAAhC,CATU,CAWV;;AACA,YAAII,UAAU,GAAG,KAAKvB,KAAL,CAAWqB,kBAA5B;AACAE,QAAAA,UAAU,CAACC,IAAX,CAAgB;AACZzB,UAAAA,MADY;AAEZK,UAAAA,YAFY;AAGZkB,UAAAA,YAHY;AAIZjB,UAAAA,UAJY;AAKZH,UAAAA;AALY,SAAhB;AAQA,aAAKgB,QAAL,CAAc;AAAEG,UAAAA,kBAAkB,EAAEE;AAAtB,SAAd,EAAkD,MAAM;AACpDP,UAAAA,YAAY,CAACS,OAAb,CAAqB,YAArB,EAAmCX,IAAI,CAACY,SAAL,CAAe,KAAK1B,KAAL,CAAWqB,kBAA1B,CAAnC;AACH,SAFD;AAIA,aAAKM,eAAL;AAEA,aAAK9B,KAAL,CAAW+B,OAAX,CAAmBJ,IAAnB,CAAwB;AACpBK,UAAAA,QAAQ,EAAE,YADU;AAEpB7B,UAAAA,KAAK,EAAE;AACHqB,YAAAA,kBAAkB,EAAE,KAAKrB,KAAL,CAAWqB;AAD5B;AAFa,SAAxB;AAMH,OAnCL;AAoCH,KA9EkB;;AAAA,SAkFnBS,oBAlFmB,GAkFIC,CAAC,IAAI;AACxB,UAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,cAAtB,EAAsC;AAClC,aAAKf,QAAL,CAAc;AAAEd,UAAAA,YAAY,EAAE2B,CAAC,CAACC,MAAF,CAASE;AAAzB,SAAd;AACH;;AACD,UAAIH,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;AAChC,aAAKf,QAAL,CAAc;AAAEb,UAAAA,UAAU,EAAE0B,CAAC,CAACC,MAAF,CAASE;AAAvB,SAAd;AACH;AACJ,KAzFkB;;AAAA,SA4FnBC,mBA5FmB,GA4FGJ,CAAC,IAAI;AACvB,WAAKb,QAAL,CAAc;AACVjB,QAAAA,cAAc,EAAE8B,CAAC,CAACC,MAAF,CAASE;AADf,OAAd;AAGH,KAhGkB;;AAAA,SAoGnBP,eApGmB,GAoGD,MAAM;AACpB,YAAMS,UAAU,GAAGtB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAnB;AACA,WAAKC,QAAL,CAAc;AACVG,QAAAA,kBAAkB,EAAEe;AADV,OAAd;AAGH,KAzGkB;;AAAA,SA6GnBC,aA7GmB,GA6GHH,KAAK,IAChBA,KAAK,GAAGI,SAAH,gBAAe;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCA9GN;;AAAA,SAgHnBC,WAhHmB,GAgHLL,KAAK,IACfA,KAAK,IAAIM,KAAK,CAACC,MAAM,CAACP,KAAD,CAAP,CAAd,gBACI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADJ,GACkEI,SAlHnD;;AAAA,SAoHnBI,aApHmB,GAoHH,CAAC,GAAGC,UAAJ,KAAmBT,KAAK,IACpCS,UAAU,CAACC,MAAX,CAAkB,CAACC,KAAD,EAAQC,SAAR,KAAsBD,KAAK,IAAIC,SAAS,CAACZ,KAAD,CAA1D,EAAmEI,SAAnE,CArHe;;AAEf,SAAKtC,KAAL,GAAa;AACT+C,MAAAA,gBAAgB,EAAE,EADT;AAET1B,MAAAA,kBAAkB,EAAE,EAFX;AAGTpB,MAAAA,cAAc,EAAE,EAHP;AAITkB,MAAAA,cAAc,EAAE,EAJP;AAKT6B,MAAAA,aAAa,EAAE,IALN;AAMT7C,MAAAA,YAAY,EAAE,IAAI8C,IAAJ,GAAWC,cAAX,GAA4BC,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CANL;AAOT/C,MAAAA,YAAY,EAAE,KAPL;AAQTC,MAAAA,UAAU,EAAE;AARH,KAAb;AAWH,GAduC,CAiBxC;;;AACA+C,EAAAA,iBAAiB,GAAG;AAChB,SAAKzB,eAAL;AACArB,IAAAA,KAAK,CAACZ,WAAD,CAAL,CACKa,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,YAAM2C,WAAW,GAAI,CAAC3C,IAAI,CAAC4C,IAAN,EAAY,GAAGC,MAAM,CAACC,IAAP,CAAY9C,IAAI,CAACE,KAAjB,CAAf,CAArB;AAEA,WAAKM,QAAL,CAAc;AACV6B,QAAAA,gBAAgB,EAAEM;AADR,OAAd;AAGH,KARL,EASSL,aAAD,IAAmB;AACf,WAAK9B,QAAL,CAAc;AAAE8B,QAAAA;AAAF,OAAd;AACH,KAXT;AAaH,GAjCuC,CAoCxC;;;AAqFAS,EAAAA,MAAM,GAAG;AACL,WACIC,OAAO,CAACC,GAAR,CAAY,KAAK3D,KAAL,CAAWC,cAAvB,gBACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AACN4B,QAAAA,QAAQ,EAAE,YADJ;AAEN7B,QAAAA,KAAK,EAAE;AACHqB,UAAAA,kBAAkB,EAAE,KAAKrB,KAAL,CAAWqB;AAD5B;AAFD,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,CADJ,CADJ,EAWK,KAAKrB,KAAL,CAAWgD,aAAX,KAA6B,IAA7B,gBAAqC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArC,gBACG;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,QAAQ,EAAE,KAAKlD,eADnB;AAEI,MAAA,aAAa,EAAE;AAAEG,QAAAA,cAAc,EAAE,KAAKD,KAAL,CAAWC;AAA7B,OAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIK,CAAC;AAAE2D,MAAAA;AAAF,KAAD,kBACG;AAAM,MAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,gBADT;AAEI,MAAA,QAAQ,EAAE,KAAKlB,aAAL,CAAmB,KAAKL,aAAxB,EAAuC,KAAKE,WAA5C,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,CAAC;AAAEsB,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA5B,CADJ,eAEI,+CAAWD,KAAX;AAAkB,MAAA,IAAI,EAAC,MAAvB;AAA8B,MAAA,WAAW,EAAC,0BAA1C;AAA2D,MAAA,KAAK,EAAE,KAAK7D,KAAL,CAAWC,cAA7E;AACI,MAAA,QAAQ,EAAE8B,CAAC,IAAI,KAAKI,mBAAL,CAAyBJ,CAAzB,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,EAIK+B,IAAI,CAACjB,KAAL,IAAciB,IAAI,CAACC,OAAnB,iBAA8B;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BD,IAAI,CAACjB,KAAlC,CAJnC,CAJR,CADJ,eAcI;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAdJ,eAeI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEmB,MAAAA;AAAF,KAAD,kBACG,oBAAC,cAAD;AACI,MAAA,YAAY,EAAE,cADlB;AAEI,MAAA,gBAAgB,EAAE,KAAKhE,KAAL,CAAW+C,gBAFjC;AAGI,MAAA,gBAAgB,EAAE,KAAK/C,KAAL,CAAWI,YAHjC;AAII,MAAA,gBAAgB,EAAG2B,CAAD,IAAO,KAAKD,oBAAL,CAA0BC,CAA1B,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CAfJ,eAyBI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzBJ,eA2BI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEiC,MAAAA;AAAF,KAAD,kBACG,oBAAC,cAAD;AACI,MAAA,YAAY,EAAE,YADlB;AAEI,MAAA,gBAAgB,EAAE,KAAKhE,KAAL,CAAW+C,gBAFjC;AAGI,MAAA,gBAAgB,EAAE,KAAK/C,KAAL,CAAWK,UAHjC;AAII,MAAA,gBAAgB,EAAE0B,CAAC,IAAI,KAAKD,oBAAL,CAA0BC,CAA1B,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CA3BJ,eAsCI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,OAAO,EAAE,KAAK6B,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAtCJ,CALR,CADJ,CAZR,CAFJ;AAkEH;;AA5LuC","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Field } from 'react-final-form';\nimport CurrencySelect from '../components/CurrencySelect';\nimport ErrorWall from '../components/Errors';\nimport './HomePage.css';\n\n\nconst currencyAPI = 'https://api.exchangeratesapi.io/latest';\n\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currencyElements: [],\n            currencySetHistory: [],\n            currencyAmount: \"\",\n            currencyResult: \"\",\n            currencyError: null,\n            currencyDate: new Date().toLocaleString().split(',')[0],\n            currencyFrom: \"USD\",\n            currencyTo: \"PLN\",\n        }\n\n    }\n\n\n    //get currency value\n    componentDidMount() {\n        this.currencyHistory();\n        fetch(currencyAPI)\n            .then(res => res.json())\n            .then(data => {\n                const allCurrency = ([data.base, ...Object.keys(data.rates)])\n\n                this.setState({\n                    currencyElements: allCurrency,\n                })\n            },\n                (currencyError) => {\n                    this.setState({ currencyError })\n                }\n            )\n    }\n\n\n    //set currency value\n    convertCurrency = () => {\n        const amount = this.state.currencyAmount;\n        const date = this.state.currencyDate;\n        const currencyFrom = this.state.currencyFrom;\n        const currencyTo = this.state.currencyTo;\n\n        fetch(currencyAPI + '?base=' + currencyFrom + '&symbols=' + currencyTo)\n            .then(res => res.json())\n            .then(data => {\n                const amountScore = this.state.currencyAmount * (data.rates[currencyTo])\n                const storageHistory = JSON.parse(localStorage.getItem('setHistory')) || [];\n\n                this.setState({\n                    currencyResult: amountScore.toFixed(2),\n                    currencySetHistory: storageHistory\n                })\n\n                const amountResult = this.state.currencyResult\n\n                //history module\n                let setHistory = this.state.currencySetHistory;\n                setHistory.push({\n                    amount,\n                    currencyFrom,\n                    amountResult,\n                    currencyTo,\n                    date\n                });\n\n                this.setState({ currencySetHistory: setHistory }, () => {\n                    localStorage.setItem('setHistory', JSON.stringify(this.state.currencySetHistory));\n                });\n\n                this.currencyHistory();\n\n                this.props.history.push({\n                    pathname: '/konwersje',\n                    state: {\n                        currencySetHistory: this.state.currencySetHistory,\n                    }\n                })\n            })\n    }\n\n\n    //handle functions\n    handleSelectCurrency = e => {\n        if (e.target.name === 'currencyFrom') {\n            this.setState({ currencyFrom: e.target.value })\n        }\n        if (e.target.name === 'currencyTo') {\n            this.setState({ currencyTo: e.target.value })\n        }\n    }\n\n\n    handleInputCurrency = e => {\n        this.setState({\n            currencyAmount: e.target.value\n        })\n    }\n\n\n    //history\n    currencyHistory = () => {\n        const getHistory = JSON.parse(localStorage.getItem('setHistory'));\n        this.setState({\n            currencySetHistory: getHistory,\n        })\n    }\n\n\n    //validation\n    requiredInput = value =>\n        (value ? undefined : <span className=\"error-form\">Wprowadź kwotę</span>);\n\n    numberInput = value =>\n        value && isNaN(Number(value)) ?\n            <span className=\"error-form\">Wartość musi być liczbą</span> : undefined;\n\n    allValidators = (...validators) => value =>\n        validators.reduce((error, validator) => error || validator(value), undefined);\n\n\n    render() {\n        return (\n            console.log(this.state.currencyAmount),\n            <div className=\"home-container\">\n                <div className=\"home-element\">\n                    <Link to={{\n                        pathname: '/konwersje',\n                        state: {\n                            currencySetHistory: this.state.currencySetHistory,\n                        }\n                    }}>\n                        <button className=\"btn-option\">Historia Konwersji</button></Link>\n                </div>\n\n                {this.state.currencyError !== null ? (<ErrorWall />) :\n                    <div className=\"home-element\">\n                        <Form\n                            onSubmit={this.convertCurrency }\n                            initialValues={{ currencyAmount: this.state.currencyAmount }}\n                        >\n                            {({ handleSubmit }) => (\n                                <form onSubmit={handleSubmit}>\n                                    <Field\n                                        name=\"currencyAmount\"\n                                        validate={this.allValidators(this.requiredInput, this.numberInput)}>\n                                        {({ input, meta }) => (\n                                            <div>\n                                                <div className=\"home-label\"><label>Kwota</label></div>\n                                                <input {...input} type=\"text\" placeholder=\"Wprowadź kwotę\" value={this.state.currencyAmount}\n                                                    onChange={e => this.handleInputCurrency(e)} />\n                                                {meta.error && meta.touched && <div className=\"form-error\">{meta.error}</div>}\n                                            </div>\n                                        )}\n                                    </Field>\n\n                                    <label name=\"selectFrom\">Konwertuj z</label>\n                                    <Field name=\"selectFrom\" >\n                                        {({ select }) => (\n                                            <CurrencySelect\n                                                currencyName={'currencyFrom'}\n                                                currencyElements={this.state.currencyElements}\n                                                currencySelected={this.state.currencyFrom}\n                                                currencyOnChange={(e) => this.handleSelectCurrency(e)}\n                                            />\n                                        )}\n                                    </Field>\n                                    <label name=\"selectTo\">Konwertuj na</label>\n\n                                    <Field name=\"selectTo\" >\n                                        {({ select }) => (\n                                            <CurrencySelect\n                                                currencyName={'currencyTo'}\n                                                currencyElements={this.state.currencyElements}\n                                                currencySelected={this.state.currencyTo}\n                                                currencyOnChange={e => this.handleSelectCurrency(e)}\n                                            />\n                                        )}\n                                    </Field>\n\n                                    <button className=\"btn-submit\" type=\"submit\" onClick={this.handleSubmit}>Konwertuj</button>\n\n                                </form>\n                            )}\n                        </Form>\n                    </div>}\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}