{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/CurrencyConverter.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport CurrencySelect from './CurrencySelect';\nimport ErrorWall from './Errors';\nimport './../styles/HomePage.css';\nexport default function CurrencyConverter() {\n  const [elements, setElements] = useState([]);\n  const [currHistory, setCurrHistory] = useState([]);\n  const [amount, setAmount] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [date] = useState(new Date().toLocaleString().split(',')[0]);\n  const [currFrom, setCurrFrom] = useState(\"USD\");\n  const [currTo, setCurrTo] = useState(\"PLN\");\n  const currencyAPI = 'https://api.exchangeratesapi.io/latest';\n  let history = useHistory(); //get currency value\n\n  const getCurrValue = useCallback(() => {\n    currencyHistory();\n    fetch(currencyAPI).then(res => res.json()).then(data => {\n      const allCurrency = [data.base, ...Object.keys(data.rates)];\n      setElements(allCurrency);\n    }).catch(err => setError(true));\n  }, []);\n  useEffect(() => {\n    getCurrValue();\n  }, [getCurrValue]);\n  useEffect(() => {\n    console.log(elements);\n    console.log(error);\n  }, [elements, error]); // useEffect(() => {\n  //     console.log(amount);\n  // }, [amount]); \n  //set currency value\n\n  const convertCurrency = e => {\n    // e.preventDefault();\n    fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo).then(res => res.json()).then(data => {\n      const amountScore = amount * data.rates[currTo];\n      const storageHistory = JSON.parse(localStorage.getItem('history')) || [];\n      setResult(amountScore.toFixed(2));\n      setCurrHistory(storageHistory);\n      currHistory.push({\n        amount,\n        currFrom,\n        result,\n        currTo,\n        date\n      });\n      setCurrHistory(localStorage.setItem('history', JSON.stringify(currHistory)));\n      currencyHistory();\n      history.push({\n        // pathname: '/konwersje',\n        state: {\n          currHistory\n        }\n      });\n    });\n  };\n\n  const handleSelectCurrency = e => {\n    if (e.target.name === 'currencyFrom') {\n      setCurrFrom(e.target.value);\n    }\n\n    if (e.target.name === 'currencyTo') {\n      setCurrTo(e.target.value);\n    }\n  };\n\n  const handleInputCurrency = e => {\n    // e.preventDefault();\n    const inputAmount = e.target.value; // const inputResult = inputAmount;\n\n    setAmount(inputAmount); // setResult(result);\n    // setAmount(inputResult);\n    // setAmount(e.target.value);\n\n    console.log(amount);\n    convertCurrency();\n  };\n\n  const currencyHistory = () => {\n    const getHistory = JSON.parse(localStorage.getItem('history'));\n    setCurrHistory(getHistory);\n  };\n\n  var currency_symbols = {\n    'USD': '$',\n    // US Dollar\n    'EUR': '€',\n    // Euro\n    'CRC': '₡',\n    // Costa Rican Colón\n    'GBP': '£',\n    // British Pound Sterling\n    'ILS': '₪',\n    // Israeli New Sheqel\n    'INR': '₹',\n    // Indian Rupee\n    'JPY': '¥',\n    // Japanese Yen\n    'KRW': '₩',\n    // South Korean Won\n    'NGN': '₦',\n    // Nigerian Naira\n    'PHP': '₱',\n    // Philippine Peso\n    'PLN': 'zł',\n    // Polish Zloty\n    'PYG': '₲',\n    // Paraguayan Guarani\n    'THB': '฿',\n    // Thai Baht\n    'UAH': '₴',\n    // Ukrainian Hryvnia\n    'VND': '₫' // Vietnamese Dong\n\n  };\n  var currency_name = 'ILS'; // if(currency_symbols[currency_name]!==undefined) {\n  //     alert(currency_symbols[currency_name]);\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: '/konwersje',\n      state: {\n        currHistory\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"History\"))), error !== null ? /*#__PURE__*/React.createElement(ErrorWall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-container-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, \"Convert from\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    min: \"1\",\n    type: \"number\",\n    placeholder: \"Amount\",\n    value: amount,\n    onChange: e => handleInputCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyFrom',\n    currencyElements: elements,\n    currencySelected: currFrom,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-container-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, \"Convert to\"), /*#__PURE__*/React.createElement(\"input\", {\n    min: \"1\",\n    type: \"number\",\n    placeholder: \"Amount Result\",\n    readOnly: true,\n    value: result,\n    onChange: e => handleInputCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyTo',\n    currencyElements: elements,\n    currencySelected: currTo,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/CurrencyConverter.js"],"names":["React","useState","useEffect","useCallback","Link","useHistory","CurrencySelect","ErrorWall","CurrencyConverter","elements","setElements","currHistory","setCurrHistory","amount","setAmount","result","setResult","error","setError","date","Date","toLocaleString","split","currFrom","setCurrFrom","currTo","setCurrTo","currencyAPI","history","getCurrValue","currencyHistory","fetch","then","res","json","data","allCurrency","base","Object","keys","rates","catch","err","console","log","convertCurrency","e","amountScore","storageHistory","JSON","parse","localStorage","getItem","toFixed","push","setItem","stringify","state","handleSelectCurrency","target","name","value","handleInputCurrency","inputAmount","getHistory","currency_symbols","currency_name","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport CurrencySelect from './CurrencySelect';\nimport ErrorWall from './Errors';\nimport './../styles/HomePage.css';\n\nexport default function CurrencyConverter() {\n\n    const [elements, setElements] = useState([]);\n    const [currHistory, setCurrHistory] = useState([]);\n    const [amount, setAmount] = useState(\"\");\n    const [result, setResult] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [date] = useState(new Date().toLocaleString().split(',')[0]);\n    const [currFrom, setCurrFrom] = useState(\"USD\");\n    const [currTo, setCurrTo] = useState(\"PLN\");\n    const currencyAPI = 'https://api.exchangeratesapi.io/latest';\n    let history = useHistory();\n\n\n    //get currency value\n    const getCurrValue = useCallback(() => {\n        currencyHistory();\n        fetch(currencyAPI)\n            .then(res => res.json())\n            .then(data => {\n                const allCurrency = ([data.base, ...Object.keys(data.rates)])\n                setElements(allCurrency);\n            })\n            .catch(err => setError(true))\n    }, [])\n\n    useEffect(() => {\n        getCurrValue();\n    }, [getCurrValue]);\n\n    useEffect(() => {\n        console.log(elements);\n        console.log(error);\n    }, [elements,error]); \n    \n    // useEffect(() => {\n    //     console.log(amount);\n    // }, [amount]); \n    \n\n\n    //set currency value\n    const convertCurrency = (e) => {\n        // e.preventDefault();\n        fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo)\n            .then(res => res.json())\n            .then(data => {\n                const amountScore = amount * (data.rates[currTo])\n                const storageHistory = JSON.parse(localStorage.getItem('history')) || [];\n                setResult(amountScore.toFixed(2))\n                setCurrHistory(storageHistory);\n                currHistory.push({\n                    amount,\n                    currFrom,\n                    result,\n                    currTo,\n                    date\n                });\n\n                setCurrHistory(localStorage.setItem('history', JSON.stringify(currHistory)))\n\n                currencyHistory();\n\n                history.push({\n                    // pathname: '/konwersje',\n                    state: {\n                        currHistory,\n                    }\n                })\n            })\n    }\n\n    const handleSelectCurrency = e => {\n        if (e.target.name === 'currencyFrom') {\n            setCurrFrom(e.target.value)\n        }\n        if (e.target.name === 'currencyTo') {\n            setCurrTo(e.target.value)\n        }\n    }\n\n    const handleInputCurrency = e => {\n        // e.preventDefault();\n        const inputAmount = e.target.value;\n        // const inputResult = inputAmount;\n\n        setAmount(inputAmount);\n        // setResult(result);\n        // setAmount(inputResult);\n        // setAmount(e.target.value);\n\n        console.log(amount)\n        convertCurrency();\n\n    }\n\n    const currencyHistory = () => {\n        const getHistory = JSON.parse(localStorage.getItem('history'));\n        setCurrHistory(getHistory)\n    }\n\n\n\n\n\nvar currency_symbols = {\n    'USD': '$', // US Dollar\n    'EUR': '€', // Euro\n    'CRC': '₡', // Costa Rican Colón\n    'GBP': '£', // British Pound Sterling\n    'ILS': '₪', // Israeli New Sheqel\n    'INR': '₹', // Indian Rupee\n    'JPY': '¥', // Japanese Yen\n    'KRW': '₩', // South Korean Won\n    'NGN': '₦', // Nigerian Naira\n    'PHP': '₱', // Philippine Peso\n    'PLN': 'zł', // Polish Zloty\n    'PYG': '₲', // Paraguayan Guarani\n    'THB': '฿', // Thai Baht\n    'UAH': '₴', // Ukrainian Hryvnia\n    'VND': '₫', // Vietnamese Dong\n};\n\nvar currency_name = 'ILS';\n\n// if(currency_symbols[currency_name]!==undefined) {\n//     alert(currency_symbols[currency_name]);\n// }\n\n\n\n    return (\n        <div className=\"converter\">\n            <div className=\"converter-element\">\n                <Link to={{ pathname: '/konwersje', state: { currHistory } }}>\n                    <button className=\"btn-option\">History</button></Link>\n            </div>\n\n            {error !== null ? (<ErrorWall />) :\n\n                <div className=\"converter-container\">\n                    <div className=\"converter-container-select\">\n                        <div className=\"converter-label\">Convert from</div>\n                        <div>\n                            <input min=\"1\" type=\"number\" placeholder=\"Amount\"\n                                value={amount}\n                                onChange={e => handleInputCurrency(e)} />\n                        </div>\n                        <CurrencySelect\n                            currencyName={'currencyFrom'}\n                            currencyElements={elements}\n                            currencySelected={currFrom}\n                            currencyOnChange={e => handleSelectCurrency(e)}\n                        />\n                    </div>\n\n                    <div className=\"converter-container-select\">\n                        <div>\n                            <div className=\"converter-label\">Convert to</div>\n                            <input min=\"1\" type=\"number\" placeholder=\"Amount Result\"\n                                readOnly\n                                value={result}\n                                onChange={e => handleInputCurrency(e)} />\n                        </div>\n                        <CurrencySelect\n                            currencyName={'currencyTo'}\n                            currencyElements={elements}\n                            currencySelected={currTo}\n                            currencyOnChange={e => handleSelectCurrency(e)}\n                        />\n\n\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}