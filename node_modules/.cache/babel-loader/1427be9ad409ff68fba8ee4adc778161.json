{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/CurrencyConverter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CurrencySelect from './CurrencySelect';\nimport ErrorWall from './Errors';\nimport Modal from './ModalHistory';\nimport useModal from './../hooks/useModal';\nimport { CURRENCY_OPTIONS } from './../components/CurrencyOptions';\nimport './../styles/Converter.css';\nimport './../styles/Modal.css';\nexport default function CurrencyConverter() {\n  _s();\n\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const [elements] = useState(CURRENCY_OPTIONS);\n  const [date] = useState(new Date().toLocaleString().split(',')[0]);\n  const [amount, setAmount] = useState(1);\n  const [result, setResult] = useState(\"\");\n  const [currTo, setCurrTo] = useState(\"PLN\");\n  const [currFrom, setCurrFrom] = useState(\"USD\");\n  const [currHistory, setCurrHistory] = useState([]);\n  const [error, setError] = useState(null);\n  const currencyAPI = 'https://api.exchangeratesapi.i/latest'; //set currency value\n\n  const convertCurrency = () => {\n    fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo).then(res => res.json()).then(data => {\n      const amountScore = (amount * data.rates[currTo]).toFixed(2);\n      setResult(amountScore);\n    }).catch(error => {\n      console.log(error);\n      setError(true);\n    });\n  };\n\n  const handleSelectCurrency = e => {\n    if (e.target.name === 'currencyFrom') {\n      setCurrFrom(e.target.value);\n    }\n\n    if (e.target.name === 'currencyTo') {\n      setCurrTo(e.target.value);\n    }\n  };\n\n  const handleInputCurrency = e => {\n    setAmount(e.target.value);\n  };\n\n  const clearStorage = () => {\n    localStorage.clear();\n    setCurrHistory([]);\n  };\n\n  useEffect(() => {\n    setCurrHistory([...currHistory, {\n      amount,\n      currFrom,\n      result,\n      currTo,\n      date\n    }]);\n  }, [result]);\n  useEffect(() => {\n    const getHistory = JSON.parse(localStorage.getItem('currencyHistory'));\n    if (getHistory) setCurrHistory(getHistory);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('currencyHistory', JSON.stringify(currHistory));\n  }, [currHistory]);\n  console.log(currHistory);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Currency Converter\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-option\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"History\"), /*#__PURE__*/React.createElement(Modal, {\n    isShowing: isShowing,\n    hide: toggle,\n    clearStorage: clearStorage,\n    currHistory: currHistory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })), error === null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-container-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"Convert from\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    min: \"1\",\n    type: \"number\",\n    onKeyDown: e => [\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault(),\n    placeholder: \"Amount\",\n    value: amount,\n    onChange: e => handleInputCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyFrom',\n    elements: elements,\n    currencySelected: currFrom,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-container-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Convert to\"), /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyTo',\n    elements: elements,\n    currencySelected: currTo,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Amount Result\",\n    readOnly: true,\n    value: result,\n    onChange: e => handleInputCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-submit\",\n    onClick: convertCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, \"Convert\"))) : /*#__PURE__*/React.createElement(ErrorWall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 14\n    }\n  }));\n}\n\n_s(CurrencyConverter, \"Pz69qEPMg3HlB4Gan8V1BBmVSE0=\", false, function () {\n  return [useModal];\n});\n\n_c = CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"sources":["/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/CurrencyConverter.js"],"names":["React","useState","useEffect","CurrencySelect","ErrorWall","Modal","useModal","CURRENCY_OPTIONS","CurrencyConverter","isShowing","toggle","elements","date","Date","toLocaleString","split","amount","setAmount","result","setResult","currTo","setCurrTo","currFrom","setCurrFrom","currHistory","setCurrHistory","error","setError","currencyAPI","convertCurrency","fetch","then","res","json","data","amountScore","rates","toFixed","catch","console","log","handleSelectCurrency","e","target","name","value","handleInputCurrency","clearStorage","localStorage","clear","getHistory","JSON","parse","getItem","setItem","stringify","includes","key","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CurrencySelect from './CurrencySelect';\nimport ErrorWall from './Errors';\nimport Modal from './ModalHistory';\nimport useModal from './../hooks/useModal';\n\nimport { CURRENCY_OPTIONS } from './../components/CurrencyOptions';\nimport './../styles/Converter.css';\nimport './../styles/Modal.css';\n\n\nexport default function CurrencyConverter() {\n    const { isShowing, toggle } = useModal();\n    const [elements] = useState(CURRENCY_OPTIONS);\n\n    const [date] = useState(new Date().toLocaleString().split(',')[0]);\n    const [amount, setAmount] = useState(1);\n    const [result, setResult] = useState(\"\");\n    const [currTo, setCurrTo] = useState(\"PLN\");\n    const [currFrom, setCurrFrom] = useState(\"USD\");\n    const [currHistory, setCurrHistory] = useState([]);\n    const [error, setError] = useState(null);\n    const currencyAPI = 'https://api.exchangeratesapi.i/latest';\n\n    //set currency value\n    const convertCurrency = () => {\n        fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo)\n            .then(res => res.json())\n            .then(data => {\n                const amountScore = (amount * (data.rates[currTo])).toFixed(2);\n                setResult(amountScore);\n            })\n            .catch((error) => {console.log(error); setError(true)})\n    }\n\n    const handleSelectCurrency = e => {\n        if (e.target.name === 'currencyFrom') {\n            setCurrFrom(e.target.value)\n        }\n        if (e.target.name === 'currencyTo') {\n            setCurrTo(e.target.value)\n        } \n    }\n\n    const handleInputCurrency = e => {\n        setAmount(e.target.value);\n    }\n\n    const clearStorage = () => {\n        localStorage.clear();\n        setCurrHistory([]);\n    }\n\n    useEffect(() => {\n        setCurrHistory([...currHistory, { amount, currFrom, result, currTo, date }])\n    }, [result])\n\n\n    useEffect(() => {\n        const getHistory = JSON.parse(localStorage.getItem('currencyHistory'))\n        if (getHistory) setCurrHistory(getHistory)\n    }, [])\n\n\n    useEffect(() => {\n        localStorage.setItem('currencyHistory', JSON.stringify(currHistory))\n    }, [currHistory])\n\n    console.log(currHistory);\n\n    return (\n        <div className=\"converter\">\n            <h1>Currency Converter</h1>\n\n            <div className=\"converter-element\">\n                <button className=\"btn-option\" onClick={toggle}>History</button>\n                <Modal\n                    isShowing={isShowing}\n                    hide={toggle}\n                    clearStorage={clearStorage}\n                    currHistory={currHistory}\n                />\n            </div>\n\n            {error === null ? \n                <div className=\"converter-container\">\n                    <div className=\"converter-container-select\">\n                        <div className=\"converter-label\">Convert from</div>\n                        <div>\n                            <input min=\"1\" type=\"number\" onKeyDown={e => [\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()} placeholder=\"Amount\"\n                                value={amount}\n                                onChange={e => handleInputCurrency(e)} />\n                        </div>\n                        <CurrencySelect\n                            currencyName={'currencyFrom'}\n                            elements={elements}\n                            currencySelected={currFrom}\n                            currencyOnChange={e => handleSelectCurrency(e)}\n                        />\n                    </div>\n\n                    <div className=\"converter-container-select\">\n                        <div className=\"converter-label\">Convert to</div>\n                        <CurrencySelect\n                            currencyName={'currencyTo'}\n                            elements={elements}\n                            currencySelected={currTo}\n                            currencyOnChange={e => handleSelectCurrency(e)}\n                        />\n                        <div>\n                            <input type=\"number\" placeholder=\"Amount Result\"\n                                readOnly\n                                value={result}\n                                onChange={e => handleInputCurrency(e)}\n                            />\n                        </div>\n                        <button className=\"btn-submit\" onClick={convertCurrency}>Convert</button>\n\n                    </div>\n                </div>\n           : <ErrorWall />  }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}