{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/CurrencyConverter.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport CurrencySelect from './CurrencySelect';\nimport ErrorWall from './Errors';\nimport { CURRENCY_OPTIONS } from './../components/CurrencyOptions';\nimport './../styles/Converter.css';\nexport default function CurrencyConverter() {\n  const [elements, setElements] = useState(CURRENCY_OPTIONS);\n  const [currHistory, setCurrHistory] = useState([]);\n  const [amount, setAmount] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [date] = useState(new Date().toLocaleString().split(',')[0]);\n  const [currFrom, setCurrFrom] = useState(\"USD\");\n  const [currTo, setCurrTo] = useState(\"PLN\");\n  const currencyAPI = 'https://api.exchangeratesapi.io/latest';\n  let history = useHistory(); //get currency value\n  // const getCurrValue = useCallback(() => {\n  //     // currencyHistory();\n  //     fetch(currencyAPI)\n  //         .then(res => res.json())\n  //         .then(data => {\n  //             const allCurrency = ([data.base, ...Object.keys(data.rates)])\n  //             setElements(allCurrency);\n  //         })\n  //         .catch(err => setError(true))\n  // }, [])\n  // useEffect(() => {\n  //     getCurrValue();\n  // }, [getCurrValue]);\n  //set currency value\n\n  const convertCurrency = async () => {\n    console.log(elements); // e.preventDefault();\n\n    await fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo).then(res => res.json()).then(data => {\n      const amountScore = (amount * data.rates[currTo]).toFixed(2); // const storageHistory = JSON.parse(localStorage.getItem('history')) || [];\n\n      console.log('amountScore', amountScore);\n      setResult(amountScore); // setCurrHistory(storageHistory);\n      // currHistory.push({\n      //     amount,\n      //     currFrom,\n      //     amountResult,\n      //     currTo,\n      //     date\n      // });  \n      // setCurrHistory(localStorage.setItem('history', JSON.stringify(currHistory)))\n\n      currencyHistory(); // history.push({\n      //     // pathname: '/conversions',\n      //     state: {\n      //         currHistory,\n      //     }\n      // })\n    });\n  };\n\n  const handleSelectCurrency = e => {\n    if (e.target.name === 'currencyFrom') {\n      setCurrFrom(e.target.value);\n    }\n\n    if (e.target.name === 'currencyTo') {\n      setCurrTo(e.target.value);\n    }\n  };\n\n  const handleInputCurrency = e => {\n    setAmount(e.target.value);\n  }; // const currencyHistory = () => {\n  //     const getHistory = JSON.parse(localStorage.getItem('history'));\n  //     setCurrHistory(getHistory)\n  // }\n\n\n  const currencyHistory = useCallback(() => {\n    // const amountResult = result;\n    console.log(result);\n    setCurrHistory([...currHistory, {\n      amount,\n      currFrom,\n      result,\n      currTo,\n      date\n    }]);\n  }, []);\n  useEffect(() => {\n    currencyHistory();\n  }, [currencyHistory]);\n  useEffect(() => {\n    const getHistory = JSON.parse(localStorage.getItem('currencyHistory'));\n    if (getHistory) setCurrHistory(getHistory);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('currencyHistory', JSON.stringify(currHistory));\n  }, [currHistory]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Currency Converter\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: '/conversions',\n      state: {\n        currHistory\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"History\"))), error !== null ? /*#__PURE__*/React.createElement(ErrorWall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-container-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, \"Convert from\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    min: \"1\",\n    type: \"number\",\n    onKeyDown: e => [\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault(),\n    placeholder: \"Amount\",\n    value: amount,\n    onChange: e => handleInputCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyFrom',\n    elements: elements,\n    currencySelected: currFrom,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-container-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, \"Convert to\"), /*#__PURE__*/React.createElement(CurrencySelect, {\n    currencyName: 'currencyTo',\n    elements: elements,\n    currencySelected: currTo,\n    currencyOnChange: e => handleSelectCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Amount Result\",\n    readOnly: true,\n    value: result,\n    onChange: e => handleInputCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: convertCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"Convert\"))));\n} // sprawidz wkladajac w formularz inputy oraz selecty","map":{"version":3,"sources":["/Users/marcin/Desktop/projects/react_workspace/currencyconverter-app/src/components/CurrencyConverter.js"],"names":["React","useState","useEffect","useCallback","Link","useHistory","CurrencySelect","ErrorWall","CURRENCY_OPTIONS","CurrencyConverter","elements","setElements","currHistory","setCurrHistory","amount","setAmount","result","setResult","error","setError","date","Date","toLocaleString","split","currFrom","setCurrFrom","currTo","setCurrTo","currencyAPI","history","convertCurrency","console","log","fetch","then","res","json","data","amountScore","rates","toFixed","currencyHistory","handleSelectCurrency","e","target","name","value","handleInputCurrency","getHistory","JSON","parse","localStorage","getItem","setItem","stringify","pathname","state","includes","key","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAO,2BAAP;AAGA,eAAe,SAASC,iBAAT,GAA6B;AAExC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACO,gBAAD,CAAxC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACmB,IAAD,IAASnB,QAAQ,CAAC,IAAIoB,IAAJ,GAAWC,cAAX,GAA4BC,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAAD,CAAvB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM2B,WAAW,GAAG,wCAApB;AACA,MAAIC,OAAO,GAAGxB,UAAU,EAAxB,CAXwC,CAcxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;;AACA,QAAMyB,eAAe,GAAG,YAAW;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ,EAD+B,CAE/B;;AACA,UAAMuB,KAAK,CAACL,WAAW,GAAG,QAAd,GAAyBJ,QAAzB,GAAoC,WAApC,GAAkDE,MAAnD,CAAL,CACDQ,IADC,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEDF,IAFC,CAEIG,IAAI,IAAI;AACV,YAAMC,WAAW,GAAG,CAACxB,MAAM,GAAIuB,IAAI,CAACE,KAAL,CAAWb,MAAX,CAAX,EAAgCc,OAAhC,CAAwC,CAAxC,CAApB,CADU,CAEV;;AAIAT,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BM,WAA3B;AAEArB,MAAAA,SAAS,CAACqB,WAAD,CAAT,CARU,CAWV;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAEAG,MAAAA,eAAe,GA7BL,CA+BV;AACA;AACA;AACA;AACA;AACA;AAEH,KAxCC,CAAN;AA0CH,GA7CD;;AA+CA,QAAMC,oBAAoB,GAAGC,CAAC,IAAI;AAC9B,QAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,cAAtB,EAAsC;AAClCpB,MAAAA,WAAW,CAACkB,CAAC,CAACC,MAAF,CAASE,KAAV,CAAX;AACH;;AACD,QAAIH,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,YAAtB,EAAoC;AAChClB,MAAAA,SAAS,CAACgB,CAAC,CAACC,MAAF,CAASE,KAAV,CAAT;AACH;AACJ,GAPD;;AASA,QAAMC,mBAAmB,GAAGJ,CAAC,IAAI;AAC7B5B,IAAAA,SAAS,CAAC4B,CAAC,CAACC,MAAF,CAASE,KAAV,CAAT;AACH,GAFD,CAzFwC,CA6FxC;AACA;AACA;AACA;;;AAGA,QAAML,eAAe,GAAGtC,WAAW,CAAC,MAAM;AACtC;AACA4B,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACAH,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiB;AAACE,MAAAA,MAAD;AAASU,MAAAA,QAAT;AAAmBR,MAAAA,MAAnB;AAA2BU,MAAAA,MAA3B;AAAmCN,MAAAA;AAAnC,KAAjB,CAAD,CAAd;AACH,GAJkC,EAIjC,EAJiC,CAAnC;AAMAlB,EAAAA,SAAS,CAAC,MAAM;AACpBuC,IAAAA,eAAe;AACV,GAFQ,EAEP,CAACA,eAAD,CAFO,CAAT;AAKAvC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM8C,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAnB;AACD,QAAIJ,UAAJ,EAAgBnC,cAAc,CAACmC,UAAD,CAAd;AAClB,GAHQ,EAGN,EAHM,CAAT;AAMA9C,EAAAA,SAAS,CAAC,MAAM;AACZiD,IAAAA,YAAY,CAACE,OAAb,CAAqB,iBAArB,EAAwCJ,IAAI,CAACK,SAAL,CAAe1C,WAAf,CAAxC;AACH,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAE2C,MAAAA,QAAQ,EAAE,cAAZ;AAA4BC,MAAAA,KAAK,EAAE;AAAE5C,QAAAA;AAAF;AAAnC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,CAFJ,EAOKM,KAAK,KAAK,IAAV,gBAAkB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,gBAEG;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAC,GAAX;AAAe,IAAA,IAAI,EAAC,QAApB;AAA6B,IAAA,SAAS,EAAEyB,CAAC,IAAI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqBc,QAArB,CAA8Bd,CAAC,CAACe,GAAhC,KAAwCf,CAAC,CAACgB,cAAF,EAArF;AAAyG,IAAA,WAAW,EAAC,QAArH;AACI,IAAA,KAAK,EAAE7C,MADX;AAEI,IAAA,QAAQ,EAAE6B,CAAC,IAAII,mBAAmB,CAACJ,CAAD,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAOI,oBAAC,cAAD;AACI,IAAA,YAAY,EAAE,cADlB;AAEI,IAAA,QAAQ,EAAEjC,QAFd;AAGI,IAAA,gBAAgB,EAAEc,QAHtB;AAII,IAAA,gBAAgB,EAAEmB,CAAC,IAAID,oBAAoB,CAACC,CAAD,CAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,eAgBI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,cAAD;AACI,IAAA,YAAY,EAAE,YADlB;AAEG,IAAA,QAAQ,EAAEjC,QAFb;AAGI,IAAA,gBAAgB,EAAEgB,MAHtB;AAII,IAAA,gBAAgB,EAAEiB,CAAC,IAAID,oBAAoB,CAACC,CAAD,CAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,WAAW,EAAC,eAAjC;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,KAAK,EAAE3B,MAFX;AAGI,IAAA,QAAQ,EAAE2B,CAAC,IAAII,mBAAmB,CAACJ,CAAD,CAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARJ,eAeI;AAAQ,IAAA,OAAO,EAAEb,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfJ,CAhBJ,CATR,CADJ;AAgDH,C,CAGD","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport CurrencySelect from './CurrencySelect';\nimport ErrorWall from './Errors';\nimport { CURRENCY_OPTIONS } from './../components/CurrencyOptions';\nimport './../styles/Converter.css';\n\n\nexport default function CurrencyConverter() {\n\n    const [elements, setElements] = useState(CURRENCY_OPTIONS);\n    const [currHistory, setCurrHistory] = useState([]);\n    const [amount, setAmount] = useState(\"\");\n    const [result, setResult] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [date] = useState(new Date().toLocaleString().split(',')[0]);\n    const [currFrom, setCurrFrom] = useState(\"USD\");\n    const [currTo, setCurrTo] = useState(\"PLN\");\n    const currencyAPI = 'https://api.exchangeratesapi.io/latest';\n    let history = useHistory();\n\n\n    //get currency value\n    // const getCurrValue = useCallback(() => {\n    //     // currencyHistory();\n    //     fetch(currencyAPI)\n    //         .then(res => res.json())\n    //         .then(data => {\n    //             const allCurrency = ([data.base, ...Object.keys(data.rates)])\n    //             setElements(allCurrency);\n  \n    //         })\n    //         .catch(err => setError(true))\n    // }, [])\n\n    // useEffect(() => {\n    //     getCurrValue();\n    // }, [getCurrValue]);\n\n\n    //set currency value\n    const convertCurrency = async() => {\n        console.log(elements);\n        // e.preventDefault();\n        await fetch(currencyAPI + '?base=' + currFrom + '&symbols=' + currTo)\n            .then(res => res.json())\n            .then(data => {\n                const amountScore = (amount * (data.rates[currTo])).toFixed(2);\n                // const storageHistory = JSON.parse(localStorage.getItem('history')) || [];\n\n\n\n                console.log('amountScore', amountScore);\n\n                setResult(amountScore);\n\n\n                // setCurrHistory(storageHistory);\n\n              \n\n\n\n                // currHistory.push({\n                //     amount,\n                //     currFrom,\n                //     amountResult,\n                //     currTo,\n                //     date\n                // });  \n                \n    \n\n                // setCurrHistory(localStorage.setItem('history', JSON.stringify(currHistory)))\n\n                currencyHistory();\n                \n                // history.push({\n                //     // pathname: '/conversions',\n                //     state: {\n                //         currHistory,\n                //     }\n                // })\n            \n            })\n     \n    }\n\n    const handleSelectCurrency = e => {\n        if (e.target.name === 'currencyFrom') {\n            setCurrFrom(e.target.value)\n        }\n        if (e.target.name === 'currencyTo') {\n            setCurrTo(e.target.value)\n        }\n    }\n\n    const handleInputCurrency = e => {\n        setAmount(e.target.value);\n    }\n\n    // const currencyHistory = () => {\n    //     const getHistory = JSON.parse(localStorage.getItem('history'));\n    //     setCurrHistory(getHistory)\n    // }\n\n\n    const currencyHistory = useCallback(() => {\n        // const amountResult = result;\n        console.log(result);\n        setCurrHistory([...currHistory, {amount, currFrom, result, currTo, date}])\n    },[])\n\n    useEffect(() => {\ncurrencyHistory();\n    },[currencyHistory])\n\n \n    useEffect(() => {\n        const getHistory = JSON.parse(localStorage.getItem('currencyHistory'))\n       if (getHistory) setCurrHistory(getHistory)\n    }, [])\n\n\n    useEffect(() => {\n        localStorage.setItem('currencyHistory', JSON.stringify(currHistory))\n    }, [currHistory])\n\n\n    return (\n        <div className=\"converter\">\n            <h1>Currency Converter</h1>\n            <div className=\"converter-element\">\n                <Link to={{ pathname: '/conversions', state: { currHistory } }}>\n                    <button className=\"btn-option\">History</button></Link>\n            </div>\n\n            {error !== null ? (<ErrorWall />) :\n\n                <div className=\"converter-container\">\n                    <div className=\"converter-container-select\">\n                        <div className=\"converter-label\">Convert from</div>\n                        <div>\n                            <input min=\"1\" type=\"number\" onKeyDown={e => [\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault()} placeholder=\"Amount\"\n                                value={amount}\n                                onChange={e => handleInputCurrency(e)} />\n                        </div>\n                        <CurrencySelect\n                            currencyName={'currencyFrom'}\n                            elements={elements}\n                            currencySelected={currFrom}\n                            currencyOnChange={e => handleSelectCurrency(e)}\n                        />\n                    </div>\n\n                    <div className=\"converter-container-select\">\n                        <div className=\"converter-label\">Convert to</div>\n                        <CurrencySelect\n                            currencyName={'currencyTo'}\n                           elements={elements}\n                            currencySelected={currTo}\n                            currencyOnChange={e => handleSelectCurrency(e)}\n                        />\n                        <div>\n                            <input type=\"number\" placeholder=\"Amount Result\"\n                                readOnly\n                                value={result}\n                                onChange={e => handleInputCurrency(e)}\n                            />\n                        </div>\n                        <button onClick={convertCurrency}>Convert</button>\n\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\n\n// sprawidz wkladajac w formularz inputy oraz selecty"]},"metadata":{},"sourceType":"module"}